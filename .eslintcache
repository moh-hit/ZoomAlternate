[{"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\index.js":"1","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\App.js":"2","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\reportWebVitals.js":"3","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Store\\reducers\\globalStateReducer.js":"4","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Store\\reducers\\globalDashboardReducer.js":"5","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Store\\reducers\\globalUserDataReducer.js":"6","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\firebase_config.js":"7","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Store\\actions.js":"8","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Views\\Lawmax.js":"9","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Views\\FirmLawmax.js":"10","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Hooks\\useActionDispatcher.js":"11","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\Welcome\\Welcome.js":"12","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\LandingPage\\LandingPage.js":"13","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\Username\\Username.js":"14","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderUserInfo\\RenderUserInfo.js":"15","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerTier\\RenderLawyerTier.js":"16","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerSpecialities\\RenderLawyerSpecialities.js":"17","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderPastCalls\\PastCalls.js":"18","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\WalletPage\\WalletPage.js":"19","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerHome\\RenderLawyerHome.js":"20","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerHome\\RenderFirmSelection.js":"21","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\RenderClientHome.js":"22","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\Firm\\FirmHome\\FirmHome.js":"23","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\VideoCall\\videoCall.js":"24","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\Firm\\FirmLandingPage\\FirmLandingPage.js":"25","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Hooks\\useGlobalStyles.js":"26","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\AppointmentModalButton.js":"27","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\VideoCall\\RenderCenteredUserProfilePic.js":"28","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\RenderContactUs.js":"29","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\RenderAboutUs.js":"30","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\RenderClientProfile.js":"31","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\RenderClientWallet.js":"32","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\RenderFindLawyer.js":"33","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\RenderClientDashboard.js":"34","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerHome\\RenderLawyerProfile.js":"35","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerHome\\RenderLawyerDashboard.js":"36","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderPastCalls\\ParticularCall.js":"37","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\Firm\\FirmHistoryTable\\FirmLawyerRevenueTable.js":"38","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\ReactPaypal\\ReactPayPal.js":"39","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\utils\\LawyerSpecialtiesList.js":"40","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\ClientAppointmentModal.js":"41","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerHome\\RenderLawyerTierSelection.js":"42","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerHome\\RenderLawyerSpecialty.js":"43","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\UserProfile\\UserProfile.js":"44","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\utils\\LawyerYearsOfQualificationOption.js":"45"},{"size":953,"mtime":1622354724991,"results":"46","hashOfConfig":"47"},{"size":1729,"mtime":1622354724965,"results":"48","hashOfConfig":"47"},{"size":375,"mtime":1622354724991,"results":"49","hashOfConfig":"47"},{"size":1422,"mtime":1622354724989,"results":"50","hashOfConfig":"47"},{"size":1229,"mtime":1622354724988,"results":"51","hashOfConfig":"47"},{"size":903,"mtime":1622354724990,"results":"52","hashOfConfig":"47"},{"size":508,"mtime":1622355358878,"results":"53","hashOfConfig":"47"},{"size":165,"mtime":1622354724988,"results":"54","hashOfConfig":"47"},{"size":9467,"mtime":1622354724990,"results":"55","hashOfConfig":"47"},{"size":4165,"mtime":1622354724990,"results":"56","hashOfConfig":"47"},{"size":661,"mtime":1622354724986,"results":"57","hashOfConfig":"47"},{"size":864,"mtime":1622354724984,"results":"58","hashOfConfig":"47"},{"size":3169,"mtime":1622354724968,"results":"59","hashOfConfig":"47"},{"size":7640,"mtime":1622399324889,"results":"60","hashOfConfig":"47"},{"size":4277,"mtime":1622354724980,"results":"61","hashOfConfig":"47"},{"size":2066,"mtime":1622354724978,"results":"62","hashOfConfig":"47"},{"size":2692,"mtime":1622354724978,"results":"63","hashOfConfig":"47"},{"size":2110,"mtime":1622354724980,"results":"64","hashOfConfig":"47"},{"size":2895,"mtime":1622354724984,"results":"65","hashOfConfig":"47"},{"size":6534,"mtime":1622354724976,"results":"66","hashOfConfig":"47"},{"size":2719,"mtime":1622354724975,"results":"67","hashOfConfig":"47"},{"size":5454,"mtime":1622354724971,"results":"68","hashOfConfig":"47"},{"size":1249,"mtime":1622354724967,"results":"69","hashOfConfig":"47"},{"size":60261,"mtime":1622354724983,"results":"70","hashOfConfig":"47"},{"size":4180,"mtime":1622354724968,"results":"71","hashOfConfig":"47"},{"size":3284,"mtime":1622399380041,"results":"72","hashOfConfig":"47"},{"size":1209,"mtime":1622354724970,"results":"73","hashOfConfig":"47"},{"size":1527,"mtime":1622354724982,"results":"74","hashOfConfig":"47"},{"size":949,"mtime":1622354724972,"results":"75","hashOfConfig":"47"},{"size":943,"mtime":1622354724970,"results":"76","hashOfConfig":"47"},{"size":421,"mtime":1622354724971,"results":"77","hashOfConfig":"47"},{"size":3056,"mtime":1622354724972,"results":"78","hashOfConfig":"47"},{"size":8554,"mtime":1622354724972,"results":"79","hashOfConfig":"47"},{"size":1741,"mtime":1622354724970,"results":"80","hashOfConfig":"47"},{"size":626,"mtime":1622354724976,"results":"81","hashOfConfig":"47"},{"size":8905,"mtime":1622354724976,"results":"82","hashOfConfig":"47"},{"size":5602,"mtime":1622354724980,"results":"83","hashOfConfig":"47"},{"size":3594,"mtime":1622354724966,"results":"84","hashOfConfig":"47"},{"size":3011,"mtime":1622354724969,"results":"85","hashOfConfig":"47"},{"size":2837,"mtime":1622354724985,"results":"86","hashOfConfig":"47"},{"size":2145,"mtime":1622354724970,"results":"87","hashOfConfig":"47"},{"size":2492,"mtime":1622354724977,"results":"88","hashOfConfig":"47"},{"size":2525,"mtime":1622354724977,"results":"89","hashOfConfig":"47"},{"size":6202,"mtime":1622354724981,"results":"90","hashOfConfig":"47"},{"size":124,"mtime":1622354724985,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"17dk593",{"filePath":"95","messages":"96","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"94"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"94"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"94"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"94"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\index.js",[],["210","211"],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\App.js",["212","213","214","215","216","217","218","219"],"import React, { useEffect, useState } from 'react'\r\nimport firebase from \"./firebase_config\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useActionDispatcher from \"./Hooks/useActionDispatcher\";\r\nimport { SET_KEYS_TRUE, UPDATE_USER_DATA } from \"./Store/actions\";\r\nimport Lawmax from './Views/Lawmax';\r\nimport FirmLawmax from './Views/FirmLawmax'\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport globalStateReducer from \"./Store/reducers/globalStateReducer\";\r\nimport globalUserDataReducer from \"./Store/reducers/globalUserDataReducer\";\r\nimport globalDashboardReducer from \"./Store/reducers/globalDashboardReducer\";\r\n\r\nfunction App() {\r\n  const userData = useSelector((state) => state.globalUserData);\r\n  const dispatchAction = useActionDispatcher();\r\n    /*                             Redux Configuration                            */\r\n    /* -------------------------------------------------------------------------- */\r\n    const rootReducers = combineReducers({\r\n      globalStateData: globalStateReducer,\r\n      globalUserData: globalUserDataReducer,\r\n      globalDashboard: globalDashboardReducer\r\n    });\r\n\r\n    const store = createStore(rootReducers, composeWithDevTools());\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n  return (\r\n      <Provider store={store}>\r\n\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Lawmax} />\r\n          <Route exact path=\"/firm\" component={FirmLawmax} />\r\n        </Switch>\r\n      </Router>\r\n      </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\reportWebVitals.js",[],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Store\\reducers\\globalStateReducer.js",[],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Store\\reducers\\globalDashboardReducer.js",[],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Store\\reducers\\globalUserDataReducer.js",[],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\firebase_config.js",[],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Store\\actions.js",[],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Views\\Lawmax.js",["220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235"],"import React, { useEffect, useState } from \"react\";\r\nimport { Dimensions, View } from \"react-native\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  Slide,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport firebase from \"../firebase_config\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useActionDispatcher from \"../Hooks/useActionDispatcher\";\r\nimport swal from \"sweetalert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport WelcomePage from \"../Components/Welcome/Welcome\";\r\nimport Username from \"../Components/Username/Username\";\r\nimport LandingPage from \"../Components/LandingPage/LandingPage\";\r\nimport RenderUserInfo from \"../Components/RenderUserInfo/RenderUserInfo\";\r\nimport RenderLawyerTier from \"../Components/RenderLawyerTier/RenderLawyerTier\";\r\nimport RenderLawyerSpecialities from \"../Components/RenderLawyerSpecialities/RenderLawyerSpecialities\";\r\nimport RenderLawyerHome from \"../Components/RenderLawyerHome/RenderLawyerHome\";\r\nimport RenderClientHome from \"../Components/RenderClientHome/RenderClientHome\";\r\nimport VideoCall from \"../Components/VideoCall/videoCall\";\r\nimport { SET_KEYS_TRUE, UPDATE_USER_DATA } from \"../Store/actions\";\r\nimport WalletPage from \"../Components/WalletPage/WalletPage\";\r\nimport PastCalls from \"../Components/RenderPastCalls/PastCalls\";\r\nimport RenderFirmSelection from '../Components/RenderLawyerHome/RenderFirmSelection'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nexport default function Lawmax() {\r\n  useEffect(() => {\r\n    var unsubscribe = firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        // User is signed in.\r\n        const userId = firebase.auth().currentUser.uid;\r\n        const snap = firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + userId)\r\n          .once(\"value\")\r\n          .then((snapshot) => {\r\n            console.log(user[\"uid\"]);\r\n            if (snapshot.val()) {\r\n              if (snapshot.val().role === \"lawyer\") {\r\n                setLoading(false);\r\n                unsubscribe();\r\n                console.log(snapshot.val());\r\n                console.log(\"previously logged in lawyer\");\r\n                dispatchAction(SET_KEYS_TRUE, {\r\n                  keys: [\"lawyerHome\"],\r\n                });\r\n                dispatchAction(UPDATE_USER_DATA, {\r\n                  data: {\r\n                    username: user[\"uid\"],\r\n                    email: snapshot.val().email,\r\n                    profilePic: snapshot.val().profilePic,\r\n                    mobile: snapshot.val().mobile,\r\n                    displayName: snapshot.val().name,\r\n                    lawyerSpecialities: snapshot.val().specialities,\r\n                    lawyerTier: snapshot.val().tier,\r\n                    islawyer: true,\r\n                    isOnline: false,\r\n                  },\r\n                });\r\n                //   self.setState({\r\n                //     showUsername: false,\r\n                //     username: userId,\r\n                //     email: user[\"email\"],\r\n                //     showLawyerTier: false,\r\n                //     welcomePage:false,\r\n                //     lawyerHome: true,\r\n                //     lawyerDashboard: true,\r\n                //     showUsername: false,\r\n                //     landingPage: false,\r\n                //     isLawyer:true,\r\n                //     displayName: user[\"displayName\"],\r\n                //     profilePic: user[\"photoURL\"],\r\n                //     mobile: snapshot.val().mobile,\r\n                //     city:snapshot.val().city,\r\n                //     firm:snapshot.val().firm,\r\n                //     firmAddress:snapshot.val().firmAddress,\r\n                //     registrationNumber:snapshot.val().registrationNumber,\r\n                //     lawyerSpecialities: snapshot.val().specialities,\r\n                //     lawyerTier: snapshot.val().tier,\r\n                //\r\n                //   },\r\n                //   () => {\r\n                //     var presenceRef = db.ref(\r\n                //       \"Accounts/\" + this.state.username+\"/\"\r\n                //     );\r\n                //     presenceRef.update({currentOnline: true})\r\n                //     presenceRef\r\n                //       .onDisconnect()\r\n                //       .update({ currentOnline: false });\r\n                //   });\r\n                //   self.availabilityToggle(true);\r\n              } else {\r\n                if (snapshot.val().role === \"client\") {\r\n                  setLoading(false);\r\n                  unsubscribe();\r\n                  console.log(\"previously logged in client\");\r\n                  dispatchAction(SET_KEYS_TRUE, {\r\n                    keys: [\"clientHome\"],\r\n                  });\r\n                  dispatchAction(UPDATE_USER_DATA, {\r\n                    data: {\r\n                      username: user[\"uid\"],\r\n                      email: snapshot.val().email,\r\n                      profilePic: snapshot.val().profilePic,\r\n                      mobile: snapshot.val().mobile,\r\n                      displayName: snapshot.val().name,\r\n                      islawyer: false,\r\n                    },\r\n                  });\r\n                } else {\r\n                  setLoading(false);\r\n                  unsubscribe();\r\n                  firebase\r\n                    .auth()\r\n                    .signOut()\r\n                    .then(\r\n                      function () {\r\n                        // Sign-out successful.\r\n                        dispatchAction(SET_KEYS_TRUE, {\r\n                          keys: [\"showUsername\"],\r\n                        });\r\n                        console.log(\"signed out\");\r\n                      },\r\n                      function (error) {\r\n                        // An error happened.\r\n                      }\r\n                    );\r\n                }\r\n              }\r\n            } else {\r\n              setLoading(false);\r\n              unsubscribe();\r\n              firebase\r\n                .auth()\r\n                .signOut()\r\n                .then(\r\n                  function () {\r\n                    // Sign-out successful.\r\n                    dispatchAction(SET_KEYS_TRUE, {\r\n                      keys: [\"showUsername\"],\r\n                    });\r\n                    console.log(\"signed out\");\r\n                  },\r\n                  function (error) {\r\n                    // An error happened.\r\n                  }\r\n                );\r\n            }\r\n          })\r\n          .catch(function error(e) {\r\n            console.log(e);\r\n          });\r\n      } else {\r\n        setLoading(false);\r\n        unsubscribe();\r\n        console.log(\"no previously logged in user\");\r\n        dispatchAction(SET_KEYS_TRUE, {\r\n          keys: [\"showUsername\"],\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const userData = useSelector((state) => state.globalUserData);\r\n  const state = useSelector((state) => state.globalStateData);\r\n  const dispatchAction = useActionDispatcher();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  let fullWidth = window.innerWidth;\r\n  let fullHeight = window.innerHeight;\r\n\r\n  const dispatchVideoCallEnd = (userType) => {\r\n    if (userType === \"lawyer\") {\r\n      dispatchAction(SET_KEYS_TRUE, {\r\n        keys: [\"lawyerHome\"],\r\n      });\r\n    } else if (userType === \"client\") {\r\n      dispatchAction(SET_KEYS_TRUE, {\r\n        keys: [\"clientHome\"],\r\n      });\r\n    }\r\n  };\r\n\r\n  return loading ? (\r\n    <WelcomePage fullWidth={fullWidth} fullHeight={fullHeight} />\r\n  ) : (\r\n    <div>\r\n      {state.showUsername ? (\r\n        <Username fullWidth={fullWidth} fullHeight={fullHeight} />\r\n      ) : null}\r\n      {state.landingPage ? (\r\n        <LandingPage fullWidth={fullWidth} fullHeight={fullHeight} />\r\n      ) : null}\r\n      {state.showUserInfo ? (\r\n        <RenderUserInfo fullWidth={fullWidth} fullHeight={fullHeight} />\r\n      ) : null}\r\n    \r\n      {state.showLawyerTier ? (\r\n        <RenderLawyerTier fullWidth={fullWidth} fullHeight={fullHeight} />\r\n      ) : null}\r\n      {state.selectLawyerFirm ? (\r\n        <RenderFirmSelection fullWidth={fullWidth} fullHeight={fullHeight} />\r\n      ) : null}\r\n\r\n      \r\n      {state.showLawyerSpecialities ? (\r\n        <RenderLawyerSpecialities\r\n          fullWidth={fullWidth}\r\n          fullHeight={fullHeight}\r\n        />\r\n      ) : null}\r\n      {state.lawyerHome ? (\r\n        <RenderLawyerHome\r\n          fullWidth={fullWidth}\r\n          fullHeight={fullHeight}\r\n        />\r\n      ) : null}\r\n      {state.clientHome ? (\r\n        <RenderClientHome\r\n          fullWidth={fullWidth}\r\n          fullHeight={fullHeight}\r\n        />\r\n      ) : null}\r\n            {state.meetingLogPage ? (\r\n        <PastCalls\r\n          fullWidth={fullWidth}\r\n          fullHeight={fullHeight}\r\n        />\r\n      ) : null}\r\n      {state.userPage ? (\r\n        <VideoCall\r\n          username={userData.username}\r\n          profilePic={userData.profilePic}\r\n          displayName={userData.profilePic}\r\n          creator={userData.islawyer}\r\n          endCallDispatch={dispatchVideoCallEnd}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Views\\FirmLawmax.js",["236","237","238","239","240","241","242","243","244","245"],"import React, { useEffect, useState } from \"react\";\r\nimport { Dimensions, View } from \"react-native\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport firebase from \"../firebase_config\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useActionDispatcher from \"../Hooks/useActionDispatcher\";\r\nimport swal from \"sweetalert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport WelcomePage from \"../Components/Welcome/Welcome\";\r\nimport { SET_KEYS_TRUE, UPDATE_USER_DATA } from \"../Store/actions\";\r\nimport FirmLandingPage from \"../Components/Firm/FirmLandingPage/FirmLandingPage\";\r\nimport FirmHome from \"../Components/Firm/FirmHome/FirmHome\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nexport default function FirmLawmax() {\r\n  useEffect(() => {\r\n    console.log(\"FIRM CHECK IN\");\r\n    var unsubscribe = firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        // User is signed in.\r\n        const userId = firebase.auth().currentUser.uid;\r\n        console.log(userId);\r\n        firebase\r\n          .database()\r\n          .ref(`Accounts/${userId}`)\r\n          .once(\"value\", (snap) => {\r\n            if (snap.val()) {\r\n              console.log(\"LAWYER LOGIN FOUND\");\r\n              firebase\r\n                .auth()\r\n                .signOut()\r\n                .then(\r\n                  function () {\r\n                    // Sign-out successful.\r\n                    dispatchAction(SET_KEYS_TRUE, {\r\n                      keys: [\"firmLandingPage\"],\r\n                    });\r\n                    console.log(\"signed out\");\r\n                  },\r\n                  function (error) {\r\n                    // An error happened.\r\n                  }\r\n                );\r\n            } else {\r\n              firebase\r\n                .database()\r\n                .ref(`Firms/${userId}`)\r\n                .once(\"value\", (snap1) => {\r\n                  if (snap1.val()) {\r\n                    //firm login found\r\n                    setLoading(false);\r\n                    console.log(\"FIRM LOGIN FOUND\");\r\n                    dispatchAction(SET_KEYS_TRUE, {\r\n                      keys: [\"firmHome\"],\r\n                    });\r\n                  } else {\r\n                    firebase\r\n                      .auth()\r\n                      .signOut()\r\n                      .then(\r\n                        function () {\r\n                          // Sign-out successful.\r\n                          dispatchAction(SET_KEYS_TRUE, {\r\n                            keys: [\"firmLandingPage\"],\r\n                          });\r\n                          console.log(\"signed out\");\r\n                        },\r\n                        function (error) {\r\n                          // An error happened.\r\n                        }\r\n                      );\r\n                  }\r\n                });\r\n            }\r\n          });\r\n      } else {\r\n        setLoading(false);\r\n        unsubscribe();\r\n        console.log(\"no previously logged in user\");\r\n        dispatchAction(SET_KEYS_TRUE, {\r\n          keys: [\"firmLandingPage\"],\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const userData = useSelector((state) => state.globalUserData);\r\n  const state = useSelector((state) => state.globalStateData);\r\n  const dispatchAction = useActionDispatcher();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  let fullWidth = window.innerWidth;\r\n  let fullHeight = window.innerHeight;\r\n\r\n  return loading ? (\r\n    <WelcomePage fullWidth={fullWidth} fullHeight={fullHeight} />\r\n  ) : (\r\n    <div>\r\n      {state.firmLandingPage ? (\r\n        <FirmLandingPage fullWidth={fullWidth} fullHeight={fullHeight} />\r\n      ) : null}\r\n      {state.firmHome ? (\r\n        <FirmHome fullWidth={fullWidth} fullHeight={fullHeight} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Hooks\\useActionDispatcher.js",[],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\Welcome\\Welcome.js",["246"],"import React from \"react\";\r\nimport { View, Image } from \"react-native\";\r\nimport { Button, Spin } from \"antd\";\r\nimport useGlobalStyles from \"../../Hooks/useGlobalStyles\";\r\nimport 'antd/dist/antd.css';\r\nimport './welcome.css'\r\n\r\nconst WelcomePage = ({ fullHeight, fullWidth, setUser, ...props }) => {\r\n  const styles = useGlobalStyles();\r\n  const width = fullWidth*0.3\r\n  const height = fullWidth*0.15\r\n  return (\r\n    <View\r\n          style={{\r\n            width: width,\r\n            marginLeft: fullWidth*0.35,\r\n            borderTopWidth:fullHeight*0.25,\r\n            borderColor: '#ffffff',\r\n            overflow : 'hidden',\r\n          }}\r\n    >\r\n      <View>\r\n        <Image\r\n          style={styles.image}\r\n          source={{ uri: \"logo.png\", width,height }}\r\n        />\r\n        <Spin />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default WelcomePage;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\LandingPage\\LandingPage.js",["247"],"import React from \"react\";\r\nimport { View, Image } from \"react-native\";\r\nimport { Button } from \"antd\";\r\nimport useGlobalStyles from \"../../Hooks/useGlobalStyles\";\r\nimport useActionDispatcher from \"../../Hooks/useActionDispatcher\";\r\nimport  firebase from \"firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { SET_KEYS_TRUE, UPDATE_USER_DATA } from \"../../Store/actions\";\r\n\r\nconst LandingPage = ({ fullHeight, fullWidth }) => {\r\n\r\n  const styles = useGlobalStyles();\r\n  const width = fullWidth*0.3\r\n  const height = fullWidth*0.15\r\n  const state = useSelector((state) => state.globalStateData)\r\n  const userData = useSelector((state) => state.globalUserData);\r\n  const dispatchAction = useActionDispatcher();\r\n  const setUser = (user) => (e) => {\r\n      if(user==='lawyer'){\r\n\r\n            var presenceRef = firebase.database().ref(\r\n              \"Accounts/\" + userData.username+\"/\"\r\n            );\r\n            presenceRef.update({currentOnline: true})\r\n            presenceRef\r\n              .onDisconnect()\r\n              .update({ currentOnline: false });\r\n              //goto render lawyer tier\r\n              //add islawyer to global state\r\n              dispatchAction(SET_KEYS_TRUE, {\r\n                    keys: [\"showLawyerTier\"],\r\n                  });\r\n              dispatchAction(UPDATE_USER_DATA, {\r\n                    data: {\r\n                      islawyer:true\r\n                    },\r\n                  });\r\n\r\n      }\r\n      else{\r\n          //goto showuser info\r\n           //add islawyer to global state\r\n           dispatchAction(SET_KEYS_TRUE, {\r\n                 keys: [\"showUserInfo\"],\r\n               });\r\n           dispatchAction(UPDATE_USER_DATA, {\r\n                 data: {\r\n                   islawyer:false\r\n                 },\r\n               });\r\n      }\r\n\r\n    const type = user;\r\n    firebase.database().ref(\"/Accounts/\" + userData.username).update({\r\n      role: type,\r\n    });\r\n  };\r\n  return (\r\n      <View\r\n      classname='login-page'\r\n        style={{\r\n          width: width,\r\n          marginLeft: fullWidth*0.35,\r\n          borderTopWidth:fullHeight*0.25,\r\n          borderColor: '#ffffff',\r\n          overflow : 'hidden',\r\n        }}\r\n      >\r\n        <View >\r\n          <Image\r\n            onClick={() => {\r\n              window.location.href = \"/\";\r\n            }}\r\n            style={styles.image}\r\n            source={{ uri: \"logo.png\", width, height }}\r\n          />\r\n        </View>\r\n      <Button\r\n        style={{\r\n          marginLeft: \"15%\",\r\n          width: \"70%\",\r\n          marginTop: \"2%\",\r\n          backgroundColor: \"#172A55\",\r\n          color: \"white\",\r\n          fontSize: 16,\r\n          height: 40,\r\n        }}\r\n        onClick={setUser(\"lawyer\")}\r\n      >\r\n        Lawyer\r\n      </Button>\r\n      <Button\r\n        type=\"primary\"\r\n        style={{\r\n          marginLeft: \"15%\",\r\n          width: \"70%\",\r\n          backgroundColor: \"#FF0102\",\r\n          border: \"none\",\r\n          marginTop: \"2%\",\r\n          fontSize: 16,\r\n          height: 40,\r\n        }}\r\n        onClick={setUser(\"client\")}\r\n      >\r\n        Client\r\n      </Button>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\Username\\Username.js",["248","249","250","251","252","253","254","255","256","257","258","259","260"],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderUserInfo\\RenderUserInfo.js",["261","262","263","264","265","266","267","268","269"],"import React, { useEffect, useState } from 'react'\r\nimport useGlobalStyles from \"../../Hooks/useGlobalStyles\";\r\nimport { View, Text } from \"react-native\";\r\nimport { Input, Button } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { SET_KEYS_TRUE, UPDATE_USER_DATA } from \"../../Store/actions\";\r\nimport useActionDispatcher from \"../../Hooks/useActionDispatcher\";\r\nimport  firebase from \"firebase\";\r\nconst RenderUserInfo = ({\r\n\r\n  width,\r\n  height,\r\n\r\n}) => {\r\n  const styles = useGlobalStyles();\r\n  const state = useSelector((state) => state.globalStateData)\r\n  const userData = useSelector((state) => state.globalUserData);\r\n  const [mobile, setMobile] = useState(true);\r\n  const [city, setCity] = useState(true);\r\n  const [firm, setFirm] = useState(true);\r\n  const [firmAddress, setFirmAddress] = useState(true);\r\n  const [registrationNumber, setRegistrationNumber] = useState(true);\r\n  const dispatchAction = useActionDispatcher();\r\n\r\n  const onInputChange = (e) => {\r\n      console.log('input change',e)\r\n    };\r\n  const profileSubmit = () => {\r\n    if (userData.isLawyer) {\r\n      // goto lawyer home\r\n      //update firebase with city, mobile, firm, firm address, registration number\r\n    } else {\r\n      //goto client home\r\n      dispatchAction(SET_KEYS_TRUE, {\r\n            keys: [\"clientHome\"],\r\n          });\r\n      //update city and mobile number of client\r\n      console.log('client home next')\r\n    }\r\n    };\r\n  return (\r\n    <View\r\n      style={{\r\n        maxWidth: \"100%\",\r\n        width: width,\r\n        height: \"100%\",\r\n        margin: \"auto\",\r\n        top: \"20%\",\r\n      }}\r\n    >\r\n      <Text style={styles.title}>Profile</Text>\r\n      <Input\r\n        style={{\r\n          marginLeft: \"15%\",\r\n          width: \"70%\",\r\n          height: 40,\r\n          fontSize: 16,\r\n          marginTop: \"2%\",\r\n        }}\r\n        type=\"text\"\r\n        onChange={onInputChange}\r\n        value={userData.email}\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        required\r\n      />\r\n      <Input\r\n        style={{\r\n          marginLeft: \"15%\",\r\n          width: \"70%\",\r\n          height: 40,\r\n          fontSize: 16,\r\n          marginTop: \"2%\",\r\n        }}\r\n        type=\"text\"\r\n        onChange={onInputChange}\r\n        value={mobile}\r\n        name=\"mobile\"\r\n        placeholder=\"Mobile Number\"\r\n        required\r\n      />\r\n      <Input\r\n        style={{\r\n          marginLeft: \"15%\",\r\n          width: \"70%\",\r\n          height: 40,\r\n          fontSize: 16,\r\n          marginTop: \"2%\",\r\n        }}\r\n        type=\"text\"\r\n        onChange={onInputChange}\r\n        value={city}\r\n        name=\"city\"\r\n        placeholder=\"city\"\r\n        required\r\n      />\r\n      {userData.isLawyer ? (\r\n          <div>\r\n        <Input\r\n          style={{\r\n            marginLeft: \"15%\",\r\n            width: \"70%\",\r\n            height: 40,\r\n            fontSize: 16,\r\n            marginTop: \"2%\",\r\n          }}\r\n          type=\"text\"\r\n          onChange={onInputChange}\r\n          value={firm}\r\n          name=\"firm\"\r\n          placeholder=\"Firm\"\r\n          required\r\n        />\r\n        <Input\r\n          style={{\r\n            marginLeft: \"15%\",\r\n            width: \"70%\",\r\n            height: 40,\r\n            fontSize: 16,\r\n            marginTop: \"2%\",\r\n          }}\r\n          type=\"text\"\r\n          onChange={onInputChange}\r\n          value={firmAddress}\r\n          name=\"firmAddress\"\r\n          placeholder=\"Firm Address\"\r\n          required\r\n        />\r\n        <Input\r\n          style={{\r\n            marginLeft: \"15%\",\r\n            width: \"70%\",\r\n            height: 40,\r\n            fontSize: 16,\r\n            marginTop: \"2%\",\r\n          }}\r\n          type=\"text\"\r\n          onChange={onInputChange}\r\n          value={registrationNumber}\r\n          name=\"registrationNumber\"\r\n          placeholder=\"SRA Number\"\r\n          required\r\n        /></div>\r\n      ) : null}\r\n      <Button\r\n        type=\"primary\"\r\n        style={{\r\n          marginLeft: \"15%\",\r\n          width: \"70%\",\r\n          height: 40,\r\n          fontSize: 16,\r\n          backgroundColor: \"#172A55\",\r\n          border: \"none\",\r\n          marginTop: \"2%\",\r\n        }}\r\n        onClick={profileSubmit}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default RenderUserInfo;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerTier\\RenderLawyerTier.js",["270","271","272"],"import React from \"react\";\r\nimport { View, Image } from \"react-native\";\r\nimport { Select } from \"antd\";\r\nimport { Option } from \"antd/lib/mentions\";\r\nimport useGlobalStyles from \"../../Hooks/useGlobalStyles\";\r\nimport useActionDispatcher from \"../../Hooks/useActionDispatcher\";\r\nimport  firebase from \"firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { SET_KEYS_TRUE, UPDATE_USER_DATA } from \"../../Store/actions\";\r\n\r\nconst RenderLawyerTier = ({ width, height }) => {\r\n  const styles = useGlobalStyles();\r\n  const state = useSelector((state) => state.globalStateData)\r\n  const userData = useSelector((state) => state.globalUserData);\r\n  const dispatchAction = useActionDispatcher();\r\n  const onTierChange = (value) => {\r\n    //goto render lawyerSpecialiti\r\n    //set global state of layer tier\r\n    dispatchAction(SET_KEYS_TRUE, {\r\n          keys: [\"showLawyerSpecialities\"],\r\n        });\r\n    dispatchAction(UPDATE_USER_DATA, {\r\n          data: {\r\n            lawyerTier:value\r\n          },\r\n        });\r\n  };\r\n  return (\r\n    <View\r\n      style={{\r\n        maxWidth: \"100%\",\r\n        width: width,\r\n        height: \"100%\",\r\n        margin: \"auto\",\r\n        top: \"20%\",\r\n      }}\r\n    >\r\n      <View style={{ height: 240 }}>\r\n        <Image\r\n          onClick={() => {\r\n            window.location.href = \"/\";\r\n          }}\r\n          style={styles.image}\r\n          source={{ uri: \"logo.png\", width, height }}\r\n        />\r\n      </View>\r\n\r\n      <Select\r\n        showSearch\r\n        style={{ width: \"70%\", marginLeft: \"15%\", height: 40, fontSize: 16 }}\r\n        placeholder=\"Years of qualification\"\r\n        optionFilterProp=\"children\"\r\n        onChange={onTierChange}\r\n        filterOption={(input, option) =>\r\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n        }\r\n      >\r\n        <Option value=\"X\">LawMax X (1-7 years)</Option>\r\n        <Option value=\"XL\">Lawmax XL (8-16)</Option>\r\n        <Option value=\"EXEC\">Lawmax EXEC (>16)</Option>\r\n      </Select>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default RenderLawyerTier;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerSpecialities\\RenderLawyerSpecialities.js",["273"],"import React from \"react\";\r\nimport { View, Image } from \"react-native\";\r\nimport { Button, Select } from \"antd\";\r\nimport useGlobalStyles from \"../../Hooks/useGlobalStyles\";\r\nimport { lawyerSpecialties } from \"../utils/LawyerSpecialtiesList\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useActionDispatcher from \"../../Hooks/useActionDispatcher\";\r\nimport { SET_KEYS_TRUE, UPDATE_USER_DATA } from \"../../Store/actions\";\r\nimport firebase from \"firebase\";\r\n\r\nconst { Option } = Select;\r\nconst RenderLawyerSpecialities = ({ width, height }) => {\r\n  const styles = useGlobalStyles();\r\n  const state = useSelector((state) => state.globalStateData);\r\n  const userData = useSelector((state) => state.globalUserData);\r\n  const dispatchAction = useActionDispatcher();\r\n  const onSpecialityChange = (value) => {\r\n    dispatchAction(UPDATE_USER_DATA, {\r\n      data: {\r\n        lawyerSpecialities: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const lawyerSubmit = () => {\r\n    //const name= this.state.lawyerName\r\n    const specialities = userData.lawyerSpecialities;\r\n    const tier = userData.lawyerTier;\r\n    console.log(tier, specialities);\r\n\r\n    //goto renderuserinfo\r\n    dispatchAction(SET_KEYS_TRUE, {\r\n      keys: [\"selectLawyerFirm\"],\r\n    });\r\n\r\n    //update tier and specialities in firebase\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + userData.username)\r\n      .update({\r\n        tier,\r\n        specialities,\r\n      });\r\n  };\r\n  return (\r\n    <View\r\n      style={{\r\n        maxWidth: \"100%\",\r\n        width: width,\r\n        height: \"100%\",\r\n        margin: \"auto\",\r\n        top: \"20%\",\r\n      }}\r\n    >\r\n      <View style={{ height: 240 }}>\r\n        <Image\r\n          onClick={() => {\r\n            window.location.href = \"/\";\r\n          }}\r\n          style={styles.image}\r\n          source={{ uri: \"logo.png\", width, height }}\r\n        />\r\n      </View>\r\n\r\n      <Select\r\n        mode=\"multiple\"\r\n        style={{\r\n          width: \"70%\",\r\n          marginLeft: \"15%\",\r\n          minHeight: 40,\r\n          fontSize: 16,\r\n        }}\r\n        placeholder=\"Please select specialities\"\r\n        onChange={onSpecialityChange}\r\n      >\r\n        {lawyerSpecialties.map(function (item, key) {\r\n          return <Option key={item}>{item}</Option>;\r\n        })}\r\n      </Select>\r\n      <Button\r\n        type=\"primary\"\r\n        style={{\r\n          marginLeft: \"15%\",\r\n          width: \"70%\",\r\n          height: 40,\r\n          fontSize: 16,\r\n          backgroundColor: \"#172A55\",\r\n          border: \"none\",\r\n          marginTop: \"2%\",\r\n        }}\r\n        onClick={lawyerSubmit}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default RenderLawyerSpecialities;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderPastCalls\\PastCalls.js",["274","275","276","277"],"import React, { useEffect, useState } from \"react\";\r\nimport { View, TouchableWithoutFeedback } from \"react-native\";\r\nimport { Card } from \"antd\";\r\nimport firebase from \"../../firebase_config\";\r\nimport useActionDispatcher from \"../../Hooks/useActionDispatcher\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  SET_KEYS_TRUE,\r\n  UPDATE_USER_DATA,\r\n  SET_DASHBOARDKEYS_TRUE,\r\n} from \"../../Store/actions\";\r\nimport ParticularCall from \"./ParticularCall\";\r\n\r\nexport default function PastCalls({ height, width }) {\r\n  const userId = firebase.auth().currentUser.uid;\r\n\r\n  const userData = useSelector((state) => state.globalUserData);\r\n  const state = useSelector((state) => state.globalStateData);\r\n  const dispatchAction = useActionDispatcher();\r\n\r\n  const [pastCalls, setPastCalls] = useState([]);\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .database()\r\n      .ref(`Accounts/${userId}/PastCalls`)\r\n      .on(\"value\", (snap) => {\r\n        setPastCalls(Object.values(snap.val()));\r\n      });\r\n  }, []);\r\n\r\n  const onCardClick = async (callNode) => {\r\n    await dispatchAction(UPDATE_USER_DATA, {data : {\r\n      particularCall: callNode\r\n    }});\r\n    await dispatchAction(SET_KEYS_TRUE, {\r\n      keys: [\"meetingLogPage\", \"showParticularCall\"],\r\n    });\r\n  };\r\n\r\n\r\n\r\n  if (state.showParticularCall) {\r\n    return <ParticularCall height={height} width={width} />;\r\n  } else {\r\n    return (\r\n      <div style={{width: window.innerWidth}} className=\"d-flex justify-content-around align-items-center col-12\">\r\n        {pastCalls &&\r\n          pastCalls.map((call) => (\r\n            <TouchableWithoutFeedback\r\n              onPress={() => onCardClick(call.videoIdNode)}\r\n            >\r\n              <Card\r\n                className=\"col-xl-5 col-lg-3 col-md-4 col-sm-6 col-xs-12\"\r\n                title={new Date(call.videoIdNode).toLocaleString()}\r\n                bordered={false}\r\n                style={{ width: 300, cursor: \"pointer\" }}\r\n              >\r\n                <p>{call.clientName}</p>\r\n              </Card>\r\n            </TouchableWithoutFeedback>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\WalletPage\\WalletPage.js",["278","279"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactPayPal from \"../ReactPaypal/ReactPayPal\";\r\nimport { TextField, InputAdornment } from \"@material-ui/core\";\r\nimport { AttachMoney } from \"@material-ui/icons\";\r\nimport { Button, Spin } from \"antd\";\r\nimport firebase from \"../../firebase_config\";\r\n\r\nexport default function WalletPage({ height }) {\r\n  const userId = firebase.auth().currentUser.uid;\r\n\r\n  const [checkout, setCheckout] = React.useState(false);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [accountBalance, setAccountBalance] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .database()\r\n      .ref(`Accounts/${userId}/balance`)\r\n      .on(\"value\", (snap) => {\r\n        if (snap.val()) {\r\n          setAccountBalance(snap.val());\r\n        }\r\n        else {\r\n          setAccountBalance(\"0\")\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const onChangeAmount = (e) => {\r\n    const re = /^[0-9\\b]+$/;\r\n    if (e.target.value === \"\" || re.test(e.target.value)) {\r\n      setError(false);\r\n      setAmount(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleCheckout = () => {\r\n    if (amount.length > 0) {\r\n      setCheckout(true);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {checkout === true ? (\r\n          <div className=\"payment-div\">\r\n            <ReactPayPal amount={amount} height={height} />\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              width: \"100%\",\r\n              height: height,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <h1 style={{marginBottom: 30, color: \"#000\"}}>Balance: $ {accountBalance != \"\" ? parseFloat(accountBalance).toFixed(2) : <Spin />}</h1>\r\n            <TextField\r\n              error={error}\r\n              id=\"outlined-basic\"\r\n              label=\"Enter Amount\"\r\n              variant=\"outlined\"\r\n              autoComplete=\"off\"\r\n              helperText={\r\n                error\r\n                  ? \"Enter a valid Amount\"\r\n                  : \"Enter Amount to be added in your wallet\"\r\n              }\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <AttachMoney />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              style={{ marginBottom: 20 }}\r\n              value={amount}\r\n              onChange={(e) => onChangeAmount(e)}\r\n            />\r\n            <Button style={{backgroundColor: \"#000\", border: \"none\"}} onClick={handleCheckout} type=\"primary\">\r\n              Checkout\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerHome\\RenderLawyerHome.js",["280","281","282"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  AuditOutlined,\r\n  ContactsOutlined,\r\n  HomeOutlined,\r\n  UserOutlined,\r\n  WalletOutlined,\r\n  SwitcherOutlined,\r\n  HistoryOutlined,\r\n  LogoutOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Layout, Menu } from \"antd\";\r\n// import RenderClientWallet from \"../RenderClientTier/RenderClientWallet\";\r\n// import RenderAboutUs from \"../RenderClientTier/RenderAboutUs\";\r\n// import RenderContactUs from \"../RenderClientTier/RenderContactUs\";\r\nimport RenderLawyerDashboard from \"./RenderLawyerDashboard\";\r\nimport RenderLawyerProfile from \"./RenderLawyerProfile\";\r\n// import { LawyerAppointmentPage } from \"./LawyerAppointmentPage\";\r\nimport firebase from \"firebase\";\r\nimport useActionDispatcher from \"../../Hooks/useActionDispatcher\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  SET_KEYS_TRUE,\r\n  UPDATE_USER_DATA,\r\n  SET_DASHBOARDKEYS_TRUE,\r\n} from \"../../Store/actions\";\r\nimport WalletPage from \"../WalletPage/WalletPage\";\r\nimport PastCalls from \"../RenderPastCalls/PastCalls\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst RenderLawyerHome = ({ fullHeight, fullWidth }) => {\r\n  // useEffect(() => {\r\n  //   db.ref(\"Accounts/\" + state.username + \"/message\").update({\r\n  //     callerName: \"\",\r\n  //     callerProfilePic: \"\",\r\n  //     callerId: \"\",\r\n  //   });\r\n  // }, [state?.username]);\r\n  const userData = useSelector((state) => state.globalUserData);\r\n  const state = useSelector((state) => state.globalDashboard);\r\n  const dispatchAction = useActionDispatcher();\r\n  const [collapse, setCollapse] = useState(true);\r\n  const onCollapse = (collapsed) => {\r\n    setCollapse((prevCheck) => !prevCheck);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatchAction(SET_DASHBOARDKEYS_TRUE, {\r\n      keys: [\"lawyerDashboard\"],\r\n    });\r\n  }, []);\r\n\r\n  const userNavigation = (event) => {\r\n    switch (event.key) {\r\n      case \"1\":\r\n        dispatchAction(SET_DASHBOARDKEYS_TRUE, {\r\n          keys: [\"lawyerDashboard\"],\r\n        });\r\n        //goto lawyerDashboard\r\n        break;\r\n      case \"2\":\r\n        dispatchAction(SET_DASHBOARDKEYS_TRUE, {\r\n          keys: [\"lawyerProfile\"],\r\n        });\r\n        //goto lawyerProfile\r\n        break;\r\n      case \"4\":\r\n        //goto past recordings\r\n        dispatchAction(SET_DASHBOARDKEYS_TRUE, {\r\n          keys: [\"meetingLogPage\"],\r\n        });\r\n        break;\r\n      case \"3\":\r\n        //goto lawyer wallet\r\n        dispatchAction(SET_DASHBOARDKEYS_TRUE, {\r\n          keys: [\"walletPage\"],\r\n        });\r\n        break;\r\n      case \"5\":\r\n        //goto aboutUs\r\n        break;\r\n      case \"6\":\r\n        //goto contactUs\r\n        break;\r\n      case \"7\":\r\n        //goto username\r\n        firebase\r\n          .database()\r\n          .ref(\"Accounts/\" + userData.username + \"/\")\r\n          .update({\r\n            currentOnline: false,\r\n          });\r\n        firebase\r\n          .auth()\r\n          .signOut()\r\n          .then(\r\n            function () {\r\n              console.log(\"Signed Out\");\r\n            },\r\n            function (error) {\r\n              console.error(\"Sign Out Error\", error);\r\n            }\r\n          );\r\n        dispatchAction(SET_KEYS_TRUE, {\r\n          keys: [\"showUsername\"],\r\n        });\r\n        break;\r\n      case \"10\":\r\n        // goto isLawyerAppointmentPage\r\n        break;\r\n      default:\r\n      //goto lawyerDashboard\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Sider\r\n        style={{\r\n          overflow: \"auto\",\r\n          height: \"100vh\",\r\n          position: \"fixed\",\r\n          left: 0,\r\n          zIndex: \"100\",\r\n        }}\r\n        collapsible\r\n        collapsed={collapse}\r\n        onCollapse={onCollapse}\r\n      >\r\n        <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\r\n          <Menu.Item key=\"9\" disabled={state.collapsed}>\r\n            {userData.displayName}\r\n          </Menu.Item>\r\n          <Menu.Item key=\"1\" icon={<HomeOutlined />} onClick={userNavigation}>\r\n            Home\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<UserOutlined />} onClick={userNavigation}>\r\n            Profile\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"10\"\r\n            icon={<SwitcherOutlined />}\r\n            onClick={userNavigation}\r\n          >\r\n            Appointments\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"4\"\r\n            icon={<HistoryOutlined />}\r\n            onClick={userNavigation}\r\n          >\r\n            Meeting Logs\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<WalletOutlined />} onClick={userNavigation}>\r\n            Wallet\r\n          </Menu.Item>\r\n          <Menu.Item key=\"5\" icon={<AuditOutlined />} onClick={userNavigation}>\r\n            About Us\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"6\"\r\n            icon={<ContactsOutlined />}\r\n            onClick={userNavigation}\r\n          >\r\n            Contact Us\r\n          </Menu.Item>\r\n          <Menu.Item key=\"7\" icon={<LogoutOutlined />} onClick={userNavigation}>\r\n            Sign Out\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout style={{ marginLeft: \"5vh\" }}>\r\n        <Content\r\n          style={{\r\n            overflow: \"initial\",\r\n            margin: \"24px 16px 0\",\r\n            textAlign: \"center\",\r\n            minHeight: fullHeight * 0.92,\r\n          }}\r\n        >\r\n          {state.lawyerDashboard ? (\r\n            <RenderLawyerDashboard height={fullHeight} width={fullWidth} />\r\n          ) : null}\r\n\r\n          {state.walletPage ? (\r\n            <WalletPage height={fullHeight} width={fullWidth} />\r\n          ) : null}\r\n\r\n          {state.meetingLogPage ? (\r\n            <PastCalls height={fullHeight} width={fullWidth} />\r\n          ) : null}\r\n\r\n          {state.lawyerProfile ? (\r\n            <RenderLawyerProfile state={userData} />\r\n          ) : null}\r\n\r\n          {/* {state.lawyerWallet ? (\r\n            <RenderClientWallet height={height} width={width} />\r\n          ) : null}\r\n          {state.aboutUs ? <RenderAboutUs /> : null}\r\n          {state.contactUs ? <RenderContactUs /> : null} */}\r\n          {/*state.isLawyerAppointmentPage ? <LawyerAppointmentPage state={state} /> : null*/}\r\n        </Content>\r\n        <Footer\r\n          style={{\r\n            position: \"relative\",\r\n            bottom: 0,\r\n            width: fullWidth,\r\n            textAlign: \"center\",\r\n            background: \"#FFFFFF\",\r\n          }}\r\n        >\r\n          Lawmax ©2021\r\n        </Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default RenderLawyerHome;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerHome\\RenderFirmSelection.js",["283"],"import React, { useState, useEffect } from \"react\";\r\nimport { View, Image } from \"react-native\";\r\nimport { Button, Select } from \"antd\";\r\nimport useGlobalStyles from \"../../Hooks/useGlobalStyles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useActionDispatcher from \"../../Hooks/useActionDispatcher\";\r\nimport { SET_KEYS_TRUE, UPDATE_USER_DATA } from \"../../Store/actions\";\r\nimport firebase from \"firebase\";\r\n\r\nconst { Option } = Select;\r\nconst RenderFirmSelection = ({ width, height }) => {\r\n  const styles = useGlobalStyles();\r\n  const state = useSelector((state) => state.globalStateData);\r\n  const userData = useSelector((state) => state.globalUserData);\r\n  const dispatchAction = useActionDispatcher();\r\n\r\n  const [firms, setFirms] = useState([]);\r\n\r\n  const onSpecialityChange = (value) => {\r\n    dispatchAction(UPDATE_USER_DATA, {\r\n      data: {\r\n        lawyerFirm: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const lawyerSubmit = () => {\r\n    //goto renderuserinfo\r\n    dispatchAction(SET_KEYS_TRUE, {\r\n      keys: [\"lawyerHome\"],\r\n    });\r\n\r\n    //update tier and specialities in firebase\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + userData.username)\r\n      .update({\r\n        lawyerFirm: userData.lawyerFirm,\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .database()\r\n      .ref(\"AllFirms/\")\r\n      .once(\"value\", (snap) => {\r\n        setFirms(Object.values(snap.val()));\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        maxWidth: \"100%\",\r\n        width: width,\r\n        height: \"100%\",\r\n        margin: \"auto\",\r\n        top: \"20%\",\r\n      }}\r\n    >\r\n      <View style={{ height: 240 }}>\r\n        <Image\r\n          onClick={() => {\r\n            window.location.href = \"/\";\r\n          }}\r\n          style={styles.image}\r\n          source={{ uri: \"logo.png\", width, height }}\r\n        />\r\n      </View>\r\n\r\n      <Select\r\n        style={{\r\n          width: \"70%\",\r\n          marginLeft: \"15%\",\r\n          minHeight: 40,\r\n          fontSize: 16,\r\n        }}\r\n        placeholder=\"Please Select Firm\"\r\n        onChange={onSpecialityChange}\r\n      >\r\n        <Option key=\"self\">Not a Firm Lawyer</Option>\r\n        {firms &&\r\n          firms.map(function (item, key) {\r\n            return <Option key={item}>{item}</Option>;\r\n          })}\r\n      </Select>\r\n      <Button\r\n        type=\"primary\"\r\n        style={{\r\n          marginLeft: \"15%\",\r\n          width: \"70%\",\r\n          height: 40,\r\n          fontSize: 16,\r\n          backgroundColor: \"#172A55\",\r\n          border: \"none\",\r\n          marginTop: \"2%\",\r\n        }}\r\n        onClick={lawyerSubmit}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default RenderFirmSelection;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\RenderClientHome.js",["284","285","286","287","288"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  AuditOutlined,\r\n  ContactsOutlined,\r\n  HomeOutlined,\r\n  UserOutlined,\r\n  WalletOutlined,\r\n  SwitcherOutlined,\r\n  SearchOutlined,\r\n  LogoutOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport RenderClientDashboard from \"./RenderClientDashboard\";\r\nimport RenderFindLawyer from \"./RenderFindLawyer\";\r\nimport firebase from \"firebase\";\r\nimport useActionDispatcher from \"../../Hooks/useActionDispatcher\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  SET_KEYS_TRUE,\r\n  UPDATE_USER_DATA,\r\n  SET_DASHBOARDKEYS_TRUE,\r\n} from \"../../Store/actions\";\r\nimport RenderClientProfile from \"./RenderClientProfile\";\r\nimport RenderClientWallet from \"./RenderClientWallet\";\r\nimport RenderAboutUs from \"./RenderAboutUs\";\r\nimport RenderContactUs from \"./RenderContactUs\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst RenderClientHome = ({ fullHeight, fullWidth }) => {\r\n  const userData = useSelector((state) => state.globalUserData);\r\n  const state = useSelector((state) => state.globalDashboard);\r\n  const dispatchAction = useActionDispatcher();\r\n  const [collapse, setCollapse] = useState(true);\r\n  const onCollapse = (collapsed) => {\r\n    setCollapse((prevCheck) => !prevCheck);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatchAction(SET_DASHBOARDKEYS_TRUE, {\r\n      keys: [\"clientDashboard\"],\r\n    });\r\n  }, []);\r\n\r\n  const userNavigation = (event) => {\r\n    switch (event.key) {\r\n      case \"1\":\r\n        console.log(userData);\r\n        dispatchAction(SET_DASHBOARDKEYS_TRUE, {\r\n          keys: [\"clientDashboard\"],\r\n        });\r\n\r\n        //goto lawyerDashboard\r\n        break;\r\n      case \"2\":\r\n        //goto lawyerProfile\r\n        dispatchAction(SET_DASHBOARDKEYS_TRUE, {\r\n          keys: [\"clientProfile\"],\r\n        });\r\n        break;\r\n      case \"4\":\r\n        //goto past recordings\r\n        break;\r\n      case \"3\":\r\n        console.log(\"3\");\r\n        dispatchAction(SET_DASHBOARDKEYS_TRUE, {\r\n          keys: [\"walletPage\"],\r\n        });\r\n        //goto lawyer wallet\r\n        break;\r\n      case \"5\":\r\n        //goto aboutUs\r\n        dispatchAction(SET_DASHBOARDKEYS_TRUE, {\r\n          keys: [\"aboutUs\"],\r\n        });\r\n        break;\r\n      case \"6\":\r\n        dispatchAction(SET_DASHBOARDKEYS_TRUE, {\r\n          keys: [\"contactUs\"],\r\n        });\r\n        //goto contactUs\r\n        break;\r\n      case \"7\":\r\n        //goto username\r\n        firebase\r\n          .database()\r\n          .ref(\"Accounts/\" + userData.username + \"/\")\r\n          .update({\r\n            currentOnline: false,\r\n          });\r\n        firebase\r\n          .auth()\r\n          .signOut()\r\n          .then(\r\n            function () {\r\n              console.log(\"Signed Out\");\r\n            },\r\n            function (error) {\r\n              console.error(\"Sign Out Error\", error);\r\n            }\r\n          );\r\n        dispatchAction(SET_KEYS_TRUE, {\r\n          keys: [\"showUsername\"],\r\n        });\r\n        break;\r\n      case \"10\":\r\n        // goto isLawyerAppointmentPage\r\n        break;\r\n      default:\r\n      //goto lawyerDashboard\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Sider\r\n        style={{\r\n          overflow: \"auto\",\r\n          height: \"100vh\",\r\n          position: \"fixed\",\r\n          left: 0,\r\n          zIndex: \"100\",\r\n        }}\r\n        collapsible\r\n        collapsed={collapse}\r\n        onCollapse={onCollapse}\r\n      >\r\n        <Menu theme=\"dark\" defaultSelectedKeys={[\"4\"]} mode=\"inline\">\r\n          <Menu.Item key=\"9\" disabled={state.collapsed}>\r\n            {userData.displayName}\r\n          </Menu.Item>\r\n          <Menu.Item key=\"1\" icon={<SearchOutlined />} onClick={userNavigation}>\r\n            Find Lawyer\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key=\"2\" icon={<UserOutlined />} onClick={userNavigation}>\r\n            Profile\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"10\"\r\n            icon={<SwitcherOutlined />}\r\n            onClick={userNavigation}\r\n          >\r\n            Appointments\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<WalletOutlined />} onClick={userNavigation}>\r\n            Wallet\r\n          </Menu.Item>\r\n          <Menu.Item key=\"5\" icon={<AuditOutlined />} onClick={userNavigation}>\r\n            About Us\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"6\"\r\n            icon={<ContactsOutlined />}\r\n            onClick={userNavigation}\r\n          >\r\n            Contact Us\r\n          </Menu.Item>\r\n          <Menu.Item key=\"7\" icon={<LogoutOutlined />} onClick={userNavigation}>\r\n            Sign Out\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout style={{ marginLeft: \"5vh\" }}>\r\n        <Content\r\n          style={{\r\n            overflow: \"initial\",\r\n            textAlign: \"center\",\r\n            height: fullHeight * 0.91,\r\n          }}\r\n        >\r\n          <br />\r\n          {state.clientDashboard ? <RenderFindLawyer /> : null}\r\n          {state.clientProfile ? (\r\n            <RenderClientProfile state={userData} />\r\n          ) : null}\r\n          {state.walletPage ? <RenderClientWallet /> : null}\r\n          {state.aboutUs ? <RenderAboutUs /> : null}\r\n          {state.contactUs ? <RenderContactUs /> : null}\r\n        </Content>\r\n\r\n        <Footer style={{ textAlign: \"center\", background: \"#FFFFFF\" }}>\r\n          Lawmax ©2021\r\n        </Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default RenderClientHome;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\Firm\\FirmHome\\FirmHome.js",["289","290","291"],"import React, { useEffect, useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { Button, Spin } from \"antd\";\r\nimport firebase from \"../../../firebase_config\";\r\nimport FirmLawyerRevenueTable from \"../FirmHistoryTable/FirmLawyerRevenueTable\";\r\n\r\nexport default function FirmHome({ fullHeight, fullWidth }) {\r\n  const userId = firebase.auth().currentUser.uid;\r\n\r\n  const [accountBalance, setAccountBalance] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"IN FIRM HOME\");\r\n    firebase\r\n      .database()\r\n      .ref(`Firms/${userId}/balance`)\r\n      .on(\"value\", (snap) => {\r\n        if (snap.val()) {\r\n          setAccountBalance(snap.val());\r\n        } else {\r\n          setAccountBalance(\"0\");\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        paddingVertical: 30,\r\n      }}\r\n    >\r\n    <h1 style={{fontSize: 60, color: \"#19456b\"}}>LAWYERS AT WORK</h1>\r\n      <h1 style={{ marginBottom: 30, color: \"#000\" }}>\r\n        Firm Balance: $ {accountBalance != \"\" ? accountBalance : <Spin />}\r\n      </h1>\r\n      <FirmLawyerRevenueTable />\r\n    </View>\r\n  );\r\n}\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\VideoCall\\videoCall.js",["292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309"],"import { MessageOutlined, UploadOutlined } from \"@ant-design/icons\";\r\nimport { Button, Drawer, message, Select, Spin, Steps, Upload } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { Component } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { LEFT, RIGHT, Swipeable } from \"react-swipeable\";\r\nimport { GiftedChat } from \"react-gifted-chat\";\r\nimport { ChatFeed, Message } from \"react-chat-ui\";\r\nimport RecordRTC from \"recordrtc\";\r\nimport RenderCenteredUserProfilePic from \"./RenderCenteredUserProfilePic\";\r\nimport AppointmentModalButton from \"../RenderClientHome/AppointmentModalButton\";\r\nimport firebase from \"firebase\";\r\nimport {\r\n  CallEndRounded,\r\n  MicOffRounded,\r\n  MicRounded,\r\n  ScreenShareRounded,\r\n  Send,\r\n  StopScreenShareRounded,\r\n  VideocamOffRounded,\r\n  VideocamRounded,\r\n} from \"@material-ui/icons\";\r\nimport { IconButton, Button as MButton } from \"@material-ui/core\";\r\nimport Timer from \"react-compound-timer\";\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nvar pc = null;\r\n\r\n//File sharing variables\r\nvar chunkLength = 10000; // To divide file into chunks\r\nvar loaded = 0; // To calculate percentage of downloaded file on receiver side\r\n\r\n//webrtc\r\nvar servers = {\r\n  iceServers: [\r\n    { urls: \"stun:stun.services.mozilla.com\" },\r\n    { urls: \"stun:stun.l.google.com:19302\" },\r\n    {\r\n      urls: \"turn:numb.viagenie.ca\",\r\n      credential: \"PrivatePassword\",\r\n      username: \"anothermohit@gmail.com\",\r\n    },\r\n  ],\r\n};\r\nconst yourId = Math.floor(Math.random() * 1000000000);\r\nlet senders = [];\r\n\r\nclass VideoCall extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.yourVideo = React.createRef();\r\n    this.friendsVideo = React.createRef();\r\n    this.textRTC = React.createRef();\r\n    this.timer = React.createRef();\r\n    console.log(\"constructor\");\r\n\r\n    this.state = {\r\n      myVideo: false,\r\n      landingPage: true,\r\n      spin: true,\r\n      callFriend: false,\r\n      callUserValue: \"\",\r\n      callUser: \"\",\r\n      recordVideo: null,\r\n      callRequest: false,\r\n      callStatus: false,\r\n      otherVideo: false,\r\n      otherScreenshare: false,\r\n      username: this.props.username,\r\n      clue: \"\",\r\n      drawerVisible: false,\r\n      screenShare: false,\r\n      messages: [],\r\n      profilePic: this.props.profilePic,\r\n      displayName: this.props.displayName,\r\n      fileList: null, // File sharing - list of files\r\n      fileURL: null, // File sharing - download url\r\n      fileName: \"\",\r\n      creator: this.props.creator,\r\n      videoOn: true,\r\n      audioOn: true,\r\n      showSelfVid: false,\r\n      text: \"\",\r\n      startTime: \"\",\r\n      fileRec: false,\r\n      fileRecName: \"\",\r\n      allMessages: {},\r\n      lawyerTier: \"\",\r\n      // File sharing - name\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  timerRef = {};\r\n\r\n  changeUsername = (e) => {\r\n    this.setState({ callUserValue: e.target.value });\r\n  };\r\n\r\n  changeTextMessage = (e) => {\r\n    this.setState({ text: e.target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const self = this;\r\n    navigator.mediaDevices\r\n      .getUserMedia({ audio: true, video: true })\r\n      .then((stream) => (this.yourVideo.current.srcObject = stream))\r\n      .then((stream) => {\r\n        console.log(stream.getTracks());\r\n        //stream.getTracks()[1].enabled = false;\r\n        console.log(\r\n          \"1 & 2. Show my face using user media stream. at time: \",\r\n          Date.now()\r\n        );\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + self.state.username + \"/webRTC\")\r\n          .update({ [Date.now()]: \"step 1/2\" });\r\n        self.setState({ videoStream: stream, videoOn: false, audioOn: true });\r\n\r\n        console.log(\"this.state.creator\", this.state.creator);\r\n        if (!this.state.creator) {\r\n          this.setState({\r\n            myVideo: false,\r\n            clue: \"Self video streaming successfully\",\r\n          });\r\n          this.findLawyer();\r\n        } else {\r\n          const docRef = firebase\r\n            .database()\r\n            .ref(\"/Accounts/\" + this.state.username + \"/message\");\r\n\r\n          docRef.on(\"value\", (snapshot) => {\r\n            console.log(snapshot.val());\r\n            self.setState({\r\n              otherVideo: snapshot.val().clientVideo,\r\n              otherScreenshare: snapshot.val().clientScreenshare,\r\n              selfVideo: snapshot.val().lawyerVideo,\r\n              selfScreenshare: snapshot.val().lawyerScreenshare,\r\n              isLawyer: true,\r\n            });\r\n          });\r\n          this.setlawyer();\r\n          this.setState({\r\n            myVideo: false,\r\n            clue: \"Self video streaming successfully\",\r\n          });\r\n        }\r\n        // alert(this.state.videoOn);\r\n      });\r\n\r\n    document.addEventListener(\"keydown\", this.handleGlobalKeyPress);\r\n    var presenceRef = firebase\r\n      .database()\r\n      .ref(\"Accounts/\" + this.state.username);\r\n    presenceRef.onDisconnect().update({ currentOnline: false });\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleGlobalKeyPress);\r\n    this.setState(this.baseState);\r\n  }\r\n\r\n  handleGlobalKeyPress = (event) => {\r\n    if (event.key === \"ArrowRight\") {\r\n      if (!this.state.myVideo) {\r\n        this.setState({ myVideo: true });\r\n      }\r\n    }\r\n    if (event.key === \"ArrowLeft\") {\r\n      if (this.state.myVideo) {\r\n        this.setState({ myVideo: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  stopVideo = () => {\r\n    if (this.state.videoOn) {\r\n      const videoTrack = senders.find(\r\n        (sender) => sender.track.kind === \"video\"\r\n      );\r\n      if (!this.state.creator) {\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + this.state.callUserValue + \"/message/clientVideo\")\r\n          .once(\"value\", (snap) => {\r\n            if (!snap.val()) {\r\n              firebase\r\n                .database()\r\n                .ref(\"/Accounts/\" + this.state.callUserValue + \"/message\")\r\n                .update({ clientVideo: true });\r\n            } else {\r\n              this.setState({ videoOn: false, showSelfVid: false });\r\n\r\n              videoTrack.track.stop();\r\n              firebase\r\n                .database()\r\n                .ref(\"/Accounts/\" + this.state.callUserValue + \"/message\")\r\n                .update({ clientVideo: false });\r\n            }\r\n          });\r\n      } else {\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + this.state.username + \"/message/lawyerVideo\")\r\n          .once(\"value\", (snap) => {\r\n            if (!snap.val()) {\r\n              firebase\r\n                .database()\r\n                .ref(\"/Accounts/\" + this.state.username + \"/message\")\r\n                .update({ lawyerVideo: true });\r\n            } else {\r\n              this.setState({ videoOn: false, showSelfVid: false });\r\n\r\n              videoTrack.track.stop();\r\n              firebase\r\n                .database()\r\n                .ref(\"/Accounts/\" + this.state.username + \"/message\")\r\n                .update({ lawyerVideo: false });\r\n            }\r\n          });\r\n      }\r\n\r\n      // if (!this.state.creator) {\r\n      //   firebase\r\n      //     .database()\r\n      //     .ref(\"/Accounts/\" + this.state.callUserValue + \"/message\")\r\n      //     .update({ clientVideo: false });\r\n      // } else {\r\n      //   firebase\r\n      //     .database()\r\n      //     .ref(\"/Accounts/\" + this.state.username + \"/message\")\r\n      //     .update({ lawyerVideo: false });\r\n      // }\r\n\r\n      console.log(\"Video off\");\r\n      // this.setState({ videoOn: false });\r\n    } else {\r\n      if (!this.state.creator) {\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + this.state.callUserValue + \"/message\")\r\n          .update({ clientVideo: true });\r\n      } else {\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + this.state.username + \"/message\")\r\n          .update({ lawyerVideo: true });\r\n      }\r\n      navigator.mediaDevices\r\n        .getUserMedia({ audio: true, video: true })\r\n        .then((stream) => {\r\n          console.log(stream.getTracks());\r\n          // console.log(senders);\r\n          senders\r\n            .find((sender) => sender.track.kind === \"video\")\r\n            .replaceTrack(stream.getTracks()[1]);\r\n          // console.log(senders);\r\n          // console.log(stream.getTracks());\r\n          this.yourVideo.current.srcObject = stream;\r\n        });\r\n      console.log(senders.find((sender) => sender.track.kind === \"video\"));\r\n      this.setState({ videoOn: true }); // Video button toggle\r\n    }\r\n  };\r\n  stopAudio = () => {\r\n    if (this.state.audioOn) {\r\n      const audioTrack = senders.find(\r\n        (sender) => sender.track.kind === \"audio\"\r\n      );\r\n      audioTrack.track.enabled = false;\r\n      console.log(\"Audio off\");\r\n      this.setState({ audioOn: false });\r\n    } else {\r\n      const audioTrack = senders.find(\r\n        (sender) => sender.track.kind === \"audio\"\r\n      );\r\n      audioTrack.track.enabled = true;\r\n      console.log(\"Audio on\");\r\n      this.setState({ audioOn: true });\r\n    }\r\n  };\r\n  // Share screen\r\n  shareScreen = () => {\r\n    // if (!displayMediaStream) {\r\n    //   displayMediaStream = navigator.mediaDevices.getDisplayMedia();\r\n    // }\r\n    if (!this.state.screenShare) {\r\n      navigator.mediaDevices.getDisplayMedia().then((stream) => {\r\n        console.log(stream.getTracks());\r\n        if (!this.state.creator) {\r\n          firebase\r\n            .database()\r\n            .ref(\"/Accounts/\" + this.state.callUserValue + \"/message\")\r\n            .update({ clientVideo: true });\r\n        } else {\r\n          firebase\r\n            .database()\r\n            .ref(\"/Accounts/\" + this.state.username + \"/message\")\r\n            .update({ lawyerVideo: true });\r\n        }\r\n        // console.log(senders);\r\n        if (senders.find((sender) => sender.track.kind === \"video\")) {\r\n          senders\r\n            .find((sender) => sender.track.kind === \"video\")\r\n            .replaceTrack(stream.getTracks()[0]);\r\n          console.log(senders);\r\n        } else {\r\n          senders.push(pc.addTrack(stream.getTracks()[0]));\r\n        }\r\n        console.log(stream.getTracks());\r\n        this.yourVideo.current.srcObject = stream;\r\n        this.setState({ screenShare: true });\r\n        //browser stopshare button callback\r\n\r\n        stream.getVideoTracks()[0].addEventListener(\"ended\", () => {\r\n          this.handleStopScreenShare();\r\n        });\r\n      });\r\n    } else {\r\n      this.handleStopScreenShare();\r\n    }\r\n  };\r\n\r\n  handleStopScreenShare = () => {\r\n    console.log(\"Stop share\");\r\n    if (!this.state.creator) {\r\n      firebase\r\n        .database()\r\n        .ref(\"/Accounts/\" + this.state.callUserValue + \"/message\")\r\n        .update({ clientVideo: false });\r\n    } else {\r\n      firebase\r\n        .database()\r\n        .ref(\"/Accounts/\" + this.state.username + \"/message\")\r\n        .update({ lawyerVideo: false });\r\n    }\r\n    if (!this.state.videoOn) {\r\n      const screenTrack = senders.find(\r\n        (sender) => sender.track.kind === \"video\"\r\n      );\r\n      screenTrack.track.stop();\r\n      this.setState({ screenShare: false });\r\n    } else {\r\n      const shareTrack = senders.find(\r\n        (sender) => sender.track.kind === \"video\"\r\n      );\r\n      shareTrack.track.stop();\r\n      navigator.mediaDevices\r\n        .getUserMedia({ audio: true, video: true })\r\n        .then((stream) => {\r\n          // console.log(stream.getTracks());\r\n          // console.log(senders);\r\n          senders\r\n            .find((sender) => sender.track.kind === \"video\")\r\n            .replaceTrack(stream.getTracks()[1]);\r\n          // console.log(senders);\r\n          // console.log(stream.getTracks());\r\n          this.yourVideo.current.srcObject = stream;\r\n          this.setState({ screenShare: false });\r\n        });\r\n    }\r\n  };\r\n  // To handle received message on chat/file transfer\r\n  handleChatMessage = (event, arrayToStoreChunks) => {\r\n    var data = JSON.parse(event.data);\r\n\r\n    console.log(data.type);\r\n    if (data.type === \"file\") {\r\n      console.log(\"file recieved\");\r\n\r\n      this.setState({\r\n        progressBar: true,\r\n        drawerOpen: true,\r\n        drawerVisible: true,\r\n        fileRec: true,\r\n        fileRecName: data.fileName,\r\n      });\r\n      var fileName = data.fileName;\r\n      var fileType = data.fileType;\r\n      var fileSize = data.fileSize;\r\n      var totalLength = data.totalLength;\r\n\r\n      console.log(fileName + fileType + fileSize);\r\n      arrayToStoreChunks.push(data.message); // pushing chunks in array\r\n      //console.log(data.message.length);\r\n      loaded += data.message.length;\r\n      console.log(loaded);\r\n\r\n      if (data.last) {\r\n        // this.saveToDisk(arrayToStoreChunks.join(''), fileName);\r\n        this.setState({\r\n          fileURL: arrayToStoreChunks.join(\"\"),\r\n          fileName: fileName,\r\n          downloadButton: true,\r\n        });\r\n        arrayToStoreChunks = []; // resetting array\r\n      }\r\n    } else if (data.type === \"text\") {\r\n      console.log(data.message);\r\n      console.log(\"Friend : \" + data.message, data.id);\r\n      if (this.state.creator) {\r\n        this.setState((previousState) => ({\r\n          drawerVisible: true,\r\n          allMessages: {\r\n            ...previousState.allMessages,\r\n            [`${Date.now()}_client`]: data.message,\r\n          },\r\n          messages: [\r\n            ...previousState.messages,\r\n            new Message({ id: data.id, message: data.message }),\r\n          ],\r\n        }));\r\n      } else {\r\n        this.setState((previousState) => ({\r\n          drawerVisible: true,\r\n          messages: [\r\n            ...previousState.messages,\r\n            new Message({ id: data.id, message: data.message }),\r\n          ],\r\n        }));\r\n      }\r\n\r\n      // console.log(event.data.size);\r\n      // document.getElementById('messageReceived').append('Friend :' + data.message);\r\n      // document.getElementById('messageReceived').innerHTML += '<br></br>'\r\n    }\r\n  };\r\n\r\n  // To send messages on chat\r\n  sendInputMessage = () => {\r\n    const input = \"hey\";\r\n    var data = {};\r\n    console.log(this.textRTC.current.state.value);\r\n    data.type = \"text\";\r\n    data.message = this.textRTC.current.state.value;\r\n    this.state.dataChannel.send(JSON.stringify(data));\r\n    this.setState({\r\n      messageReceived: [\r\n        ...this.state.messageReceived,\r\n        { name: \"you\", message: this.textRTC.current.state.value },\r\n      ],\r\n    });\r\n  };\r\n\r\n  // To select and load the file\r\n  fileSelect = (e) => {\r\n    this.setState({ progressBar: true }); // Show progress bar\r\n    var fileList = e.target.files;\r\n    var file = fileList[0];\r\n    this.setState({ fileList: file });\r\n    console.log(fileList);\r\n    console.log(\r\n      \"File name: \" +\r\n        file.name +\r\n        \"  File type: \" +\r\n        file.type +\r\n        \" File size: \" +\r\n        file.size\r\n    );\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    // const img = document.getElementById('preview')     // To show preview\r\n\r\n    reader.onload = this.onReadAsDataURL;\r\n  };\r\n\r\n  // To SEND the file after clicking 'SEND' button  - - - NOT IMPLEMENTED YET - - -\r\n  sendFileButton = (e) => {\r\n    var input = document.getElementById(\"inputFile\").value;\r\n    // var files = this.files[0];\r\n    // console.log(files);\r\n    //document.getElementById('downloadSection').innerHTML= '<a href=\"input\" download=\"inputfile\">'\r\n    console.log(input);\r\n  };\r\n\r\n  // To SEND the file once loaded\r\n  onReadAsDataURL = (event, text) => {\r\n    const that = this;\r\n    var dataChannel = this.state.dataChannel;\r\n    var file = that.state.fileList;\r\n    //var fileDetailsArray = Object.keys(file).map((key)=>[key,file[key]])\r\n    var data = {}; // data object to transmit over data channel\r\n    data.fileName = file.name;\r\n    data.fileType = file.type;\r\n    data.fileSize = file.size;\r\n\r\n    if (event) {\r\n      text = event.target.result;\r\n      data.totalLength = text.length;\r\n    } // on first invocation\r\n\r\n    if (text.length > chunkLength) {\r\n      data.message = text.slice(0, chunkLength); // getting chunk using predefined chunk length\r\n      data.type = \"file\";\r\n    } else {\r\n      data.message = text;\r\n      data.type = \"file\";\r\n      data.last = true;\r\n    }\r\n\r\n    dataChannel.send(JSON.stringify(data));\r\n\r\n    var remainingDataURL = text.slice(data.message.length);\r\n    if (remainingDataURL.length) {\r\n      that.onReadAsDataURL(null, remainingDataURL); // continue transmitting\r\n    }\r\n  };\r\n\r\n  // To save the file received during call //\r\n  saveToDisk = async () => {\r\n    const fileUrl = this.state.fileURL;\r\n    const fileName = this.state.fileName;\r\n    var save = document.createElement(\"a\");\r\n    save.href = fileUrl;\r\n    save.target = \"_blank\";\r\n    save.download = fileName || fileUrl;\r\n\r\n    var evt = document.createEvent(\"MouseEvents\");\r\n    await evt.initMouseEvent(\r\n      \"click\",\r\n      true,\r\n      true,\r\n      window,\r\n      1,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      false,\r\n      false,\r\n      false,\r\n      false,\r\n      0,\r\n      null\r\n    );\r\n\r\n    await save.dispatchEvent(evt);\r\n    await (window.URL || window.webkitURL).revokeObjectURL(save.href);\r\n    await this.deleteReceivedfile();\r\n    await this.setState({ fileRec: false });\r\n  };\r\n  // Delete received file //\r\n  deleteReceivedfile = () => {\r\n    this.setState({ fileRec: false, fileURL: null, fileName: \"\" });\r\n  };\r\n\r\n  videoCall = () => {\r\n    pc = new RTCPeerConnection(servers);\r\n    let dataChannel = pc.createDataChannel(\"MyApp Channel\");\r\n    dataChannel.addEventListener(\"open\", (event) => {\r\n      //dataChannel.send('hello');\r\n      console.log(\"Data Channel is open now!\" + Date.now());\r\n      //   //beginTransmission(dataChannel);\r\n    });\r\n    dataChannel.onmessage = function (event) {\r\n      console.log(event.data);\r\n    };\r\n    pc.ondatachannel = (event) => {\r\n      console.log(\"Listening data channel\");\r\n      var channelRec = event.channel;\r\n      var arrayToStoreChunks = [];\r\n      channelRec.onmessage = function (event) {\r\n        self.handleChatMessage(event, arrayToStoreChunks);\r\n      };\r\n      console.log(channelRec);\r\n    };\r\n    this.setState({ dataChannel });\r\n    console.log(\" peer connection created.\");\r\n    if (this.state.callFriend) {\r\n      console.log(this.state.callFriend, this.state.callUserValue);\r\n      firebase\r\n        .database()\r\n        .ref(\"/Accounts/\" + this.state.callUserValue + \"/webRTC\")\r\n        .update({ [Date.now()]: \"step: 3\" });\r\n    } else {\r\n      firebase\r\n        .database()\r\n        .ref(\"/Accounts/\" + this.state.username + \"/webRTC\")\r\n        .update({ [Date.now()]: \"step: 4\" });\r\n    }\r\n\r\n    this.setState({ pc: pc });\r\n    pc.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        if (this.state.callFriend) {\r\n          console.log(\"send ice candidate to lawyer by client, step 10.\");\r\n          this.sendMessageToCallICE(\r\n            this.state.username,\r\n            JSON.stringify({ ice: event.candidate })\r\n          );\r\n          firebase\r\n            .database()\r\n            .ref(\"/Accounts/\" + this.state.callUserValue + \"/webRTC\")\r\n            .update({ [Date.now()]: \"step: 10\" });\r\n        } else {\r\n          console.log(\"send ice candidate to client by lawyer, step 17.\");\r\n          firebase\r\n            .database()\r\n            .ref(\"/Accounts/\" + this.state.username + \"/webRTC\")\r\n            .update({ [Date.now()]: \"step: 17\" });\r\n          this.sendMessageICE(\r\n            this.state.username,\r\n            JSON.stringify({ ice: event.candidate })\r\n          );\r\n        }\r\n      } else {\r\n        console.log(\"Sent All Ice\");\r\n        console.log(pc);\r\n      }\r\n    };\r\n    pc.onaddstream = (event) => {\r\n      this.friendsVideo.current.srcObject = event.stream;\r\n      const recordVideo = RecordRTC(event.stream, {\r\n        mimeType: \"video/webm;codecs=vp8\",\r\n        canvas: {\r\n          width: window.innerWidth,\r\n          height: window.innerHeight,\r\n          minFrameRate: 3,\r\n          maxFrameRate: 50,\r\n        },\r\n      });\r\n      self.setState({ recordVideo: recordVideo });\r\n      if (this.state.creator) {\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + this.state.username)\r\n          .on(\"value\", (snap) => {\r\n            if (snap.val().lawyerFirm === \"self\") {\r\n              this.setState({ lawyerFirm: \"self\" });\r\n            } else {\r\n              firebase\r\n                .database()\r\n                .ref(\"Firms\")\r\n                .orderByChild(\"name\")\r\n                .equalTo(snap.val().lawyerFirm)\r\n                .on(\"value\", (snap) => {\r\n                  snap.forEach((child) =>\r\n                    this.setState({ lawyerFirm: child.key })\r\n                  );\r\n                });\r\n            }\r\n          });\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + this.state.username)\r\n          .on(\"value\", (snap) => {\r\n            this.setState({\r\n              lawyerTier:\r\n                snap.val().tier === \"EXEC\"\r\n                  ? 9\r\n                  : snap.val().tier === \"XL\"\r\n                  ? 6\r\n                  : snap.val().tier === \"X\"\r\n                  ? 3\r\n                  : 0,\r\n            });\r\n          });\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + this.state.username + \"/message\")\r\n          .update({ startTimer: true })\r\n          .then(() => {\r\n            message.success(\"RECORDING NOW.\");\r\n            this.timerRef.start();\r\n            recordVideo.startRecording();\r\n          });\r\n      } else {\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + this.state.callUserValue)\r\n          .on(\"value\", (snap) => {\r\n            this.setState({\r\n              lawyerTier:\r\n                snap.val().tier === \"EXEC\"\r\n                  ? 9\r\n                  : snap.val().tier === \"XL\"\r\n                  ? 6\r\n                  : snap.val().tier === \"X\"\r\n                  ? 3\r\n                  : 0,\r\n            });\r\n          });\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + this.state.username + \"/name\")\r\n          .on(\"value\", (snapName) => {\r\n            firebase\r\n              .database()\r\n              .ref(\"/Accounts/\" + this.state.callUserValue)\r\n              .update({ clientName: snapName.val() });\r\n          });\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + this.state.callUserValue + \"/message/startTimer\")\r\n          .on(\"value\", (snap) => {\r\n            if (snap.val()) {\r\n              message.success(\"RECORDING NOW.\");\r\n              this.timerRef.start();\r\n              recordVideo.startRecording();\r\n            }\r\n          });\r\n      }\r\n      console.log(\"Adding other person's video to my screen. step 19/20.\");\r\n      console.log(event.stream);\r\n      this.setState({ clue: \"Other video recieved\" });\r\n      this.setState({ spin: false });\r\n    };\r\n\r\n    // pc.onaddtrack = function (event) {\r\n    //   alert(\"ADDING TRACK\");\r\n    //   console.log(event.track.kind + \": \" + event.track.label);\r\n    //   this.friendsVideo.current.srcObject = event.track;\r\n    //   this.setState({ spin: false });\r\n    // };\r\n    const self = this;\r\n    if (this.state.callFriend) {\r\n      const stream = this.state.videoStream;\r\n      const tracks = stream.getTracks();\r\n\r\n      tracks.forEach((track) => {\r\n        senders.push(pc.addTrack(track, stream));\r\n      });\r\n\r\n      /* pc.createOffer()\r\n            .then((offer) => {\r\n                pc.setLocalDescription(offer)\r\n                console.log('first offer made')\r\n            })\r\n            .then(() => {*/\r\n\r\n      pc.createOffer().then((offer) => {\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + self.state.callUserValue + \"/webRTC\")\r\n          .update({ [Date.now()]: \"step: 5\" });\r\n        console.log(\"offer created\");\r\n        pc.setLocalDescription(offer)\r\n          .then(() => {\r\n            firebase\r\n              .database()\r\n              .ref(\"/Accounts/\" + self.state.callUserValue + \"/webRTC\")\r\n              .update({ [Date.now()]: \"step: 6\" });\r\n          })\r\n          .then(() => {\r\n            self.sendMessageToCall(\r\n              this.state.username,\r\n              JSON.stringify({ sdp: pc.localDescription })\r\n            );\r\n            firebase\r\n              .database()\r\n              .ref(\"/Accounts/\" + self.state.callUserValue + \"/webRTC\")\r\n              .update({ [Date.now()]: \"step: 7\" });\r\n          });\r\n      });\r\n\r\n      const docRef = firebase\r\n        .database()\r\n        .ref(\"/Accounts/\" + self.state.callUserValue + \"/message\");\r\n      docRef.on(\"value\", (snapshot2) => {\r\n        self.setState({ startTime: snapshot2.val().startTime });\r\n        if (snapshot2.val().message) {\r\n          if (JSON.parse(snapshot2.val().message)) {\r\n            console.log(snapshot2.val().message);\r\n            const msg = JSON.parse(snapshot2.val().message);\r\n            console.log(\"inside answer reading function\");\r\n\r\n            console.log(msg);\r\n            const sender = snapshot2.val().sender;\r\n            if (sender != this.state.username && !pc.remoteDescription) {\r\n              if (self.state.callStatus) {\r\n                if (msg.sdp.type === \"answer\") {\r\n                  console.log(\"setting remote description\");\r\n                  pc.setRemoteDescription(new RTCSessionDescription(msg.sdp))\r\n                    .then(() => {\r\n                      const docRef2 = firebase\r\n                        .database()\r\n                        .ref(\r\n                          \"/Accounts/\" +\r\n                            self.state.callUserValue +\r\n                            \"/ice/lawyerIce\"\r\n                        );\r\n                      docRef2.on(\"child_added\", (snapshot) => {\r\n                        if (JSON.parse(snapshot.val())) {\r\n                          const ice = JSON.parse(snapshot.val());\r\n\r\n                          if (self.state.callStatus) {\r\n                            pc.addIceCandidate(new RTCIceCandidate(ice.ice))\r\n                              .then((_) => {\r\n                                firebase\r\n                                  .database()\r\n                                  .ref(\r\n                                    \"/Accounts/\" +\r\n                                      self.state.callUserValue +\r\n                                      \"/webRTC\"\r\n                                  )\r\n                                  .update({ [Date.now()]: \"step: 18\" });\r\n                                console.log(\r\n                                  \"Added ice candidate to clien's peerconnection which was sent by lawyer, step 18\"\r\n                                );\r\n                                self.setState({\r\n                                  clue:\r\n                                    \"Added ice candidate to client's peerconnection\",\r\n                                });\r\n                                console.log(ice.ice);\r\n                              })\r\n                              .catch((e) => {\r\n                                console.log(\r\n                                  \"Error: Failure during addIceCandidate()\"\r\n                                );\r\n                              });\r\n                          }\r\n                        }\r\n                      });\r\n                      firebase\r\n                        .database()\r\n                        .ref(\r\n                          \"/Accounts/\" + self.state.callUserValue + \"/webRTC\"\r\n                        )\r\n                        .update({ [Date.now()]: \"step: 15\" });\r\n                    })\r\n                    .catch((e) => {\r\n                      console.log(\r\n                        \"Error: Failure while adding answer to remote description\"\r\n                      );\r\n                    });\r\n                  if (snapshot2.val().callStatus) {\r\n                    message.success(\"Call connected.\");\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n      //});\r\n    } else {\r\n      /* pc.createOffer()\r\n            .then((offer) => {\r\n                pc.setLocalDescription(offer)\r\n                console.log('first offer made')\r\n            })\r\n            .then(() => {*/\r\n      console.log(\"lawyer in videocall function\");\r\n      const stream = this.state.videoStream;\r\n      const tracks = stream.getTracks();\r\n\r\n      tracks.forEach((track) => {\r\n        console.log(track);\r\n        senders.push(pc.addTrack(track, stream));\r\n      });\r\n\r\n      const docRef = firebase\r\n        .database()\r\n        .ref(\"/Accounts/\" + this.state.username + \"/message\");\r\n\r\n      docRef.on(\"value\", (snapshot) => {\r\n        self.setState({\r\n          callerId: snapshot.val().callerId,\r\n          startTime: snapshot.val().startTime,\r\n        });\r\n        if (snapshot.val().message && pc.connectionState != \"closed\") {\r\n          var msg = JSON.parse(snapshot.val().message);\r\n          const sender = snapshot.val().sender;\r\n          if (sender != this.state.username && !pc.remoteDescription) {\r\n            if (msg.sdp.type === \"offer\") {\r\n              console.log(\r\n                \"offer sent by client is recieved by lawyer, step 8.\"\r\n              );\r\n              self.setState({ clue: \"offer recieved from the client\" });\r\n\r\n              pc.setRemoteDescription(new RTCSessionDescription(msg.sdp)).then(\r\n                () => {\r\n                  firebase\r\n                    .database()\r\n                    .ref(\"/Accounts/\" + self.state.username + \"/webRTC\")\r\n                    .update({ [Date.now()]: \"step: 8\" });\r\n                  const docRef2 = firebase\r\n                    .database()\r\n                    .ref(\"/Accounts/\" + self.state.username + \"/ice/clientIce\");\r\n                  docRef2.on(\"child_added\", (snapshot) => {\r\n                    if (JSON.parse(snapshot.val())) {\r\n                      const ice = JSON.parse(snapshot.val());\r\n                      pc.addIceCandidate(ice.ice)\r\n                        .then(() => {\r\n                          console.log(\r\n                            \"Added ice candidate at lawyer peer connection sent by client, step:11 \"\r\n                          );\r\n                          firebase\r\n                            .database()\r\n                            .ref(\"/Accounts/\" + self.state.username + \"/webRTC\")\r\n                            .update({ [Date.now()]: \"step:11\" });\r\n                          self.setState({\r\n                            clue:\r\n                              'Added ice candidate to lawyer\"s peerconnection',\r\n                          });\r\n                          console.log(ice.ice);\r\n                        })\r\n                        .catch((e) => {\r\n                          console.log(\r\n                            \"Error: Failure during addIceCandidate()\",\r\n                            e\r\n                          );\r\n                          console.log(ice.ice);\r\n                        });\r\n                    }\r\n                  });\r\n                  pc.createAnswer().then((answer) => {\r\n                    firebase\r\n                      .database()\r\n                      .ref(\"/Accounts/\" + self.state.username + \"/webRTC\")\r\n                      .update({ [Date.now()]: \"step: 12\" });\r\n                    pc.setLocalDescription(answer)\r\n                      .then(() => {\r\n                        firebase\r\n                          .database()\r\n                          .ref(\"/Accounts/\" + self.state.username + \"/webRTC\")\r\n                          .update({ [Date.now()]: \"step: 13\" });\r\n                      })\r\n                      .then(() => {\r\n                        self.sendMessage(\r\n                          this.state.username,\r\n                          JSON.stringify({ sdp: pc.localDescription })\r\n                        );\r\n                        firebase\r\n                          .database()\r\n                          .ref(\"/Accounts/\" + self.state.username + \"/webRTC\")\r\n                          .update({ [Date.now()]: \"step: 14\" });\r\n                        self.setState({ clue: \"answer sent to the client\" });\r\n                      });\r\n                  });\r\n                }\r\n              );\r\n            }\r\n          }\r\n        }\r\n      });\r\n      //});\r\n    }\r\n  };\r\n\r\n  callUser = (callUserValue) => {\r\n    const self = this;\r\n    self.setState({ callFriend: true });\r\n    console.log(\"inside callUser fuction\");\r\n\r\n    //const sleep = m => new Promise(r => setTimeout(r, m));\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + callUserValue + \"/message\")\r\n      .update({\r\n        callRequest: true,\r\n        callerId: self.state.username,\r\n        callerProfilePic: this.state.profilePic,\r\n        callerName: this.state.displayName,\r\n      });\r\n    const lawyer = firebase.database().ref(\"/Accounts/\" + callUserValue);\r\n    lawyer.on(\"value\", (snapshot) => {\r\n      if (snapshot.val()) {\r\n        this.setState({\r\n          callerProfilePic: snapshot.val().profilePic || \"\",\r\n        });\r\n      }\r\n    });\r\n    const docRef2 = firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + callUserValue + \"/message/reject\");\r\n    docRef2.on(\"value\", (snapshot2) => {\r\n      console.log(snapshot2.val());\r\n      if (snapshot2.val()) {\r\n        message.success(\"Call rejected\");\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + self.state.callUserValue + \"/message/\")\r\n          .update({\r\n            reject: false,\r\n          });\r\n        self.endClientCall();\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + self.state.callUserValue + \"/message/callStatus\")\r\n          .off();\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + self.state.callUserValue + \"/message/reject\")\r\n          .off();\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + self.state.callUserValue + \"/message\")\r\n          .off();\r\n        firebase\r\n          .database()\r\n          .ref(\"/Accounts/\" + self.state.callUserValue + \"/ice\")\r\n          .off();\r\n\r\n        self.setState({ callUserValue: \"\", callFriend: false });\r\n        senders.forEach((track) => {\r\n          console.log(track);\r\n          track.track.stop();\r\n        });\r\n      }\r\n    });\r\n    const docRef3 = firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + this.state.callUserValue + \"/message\");\r\n\r\n    docRef3.on(\"value\", (snapshot) => {\r\n      console.log(snapshot.val());\r\n      self.setState({\r\n        otherVideo: snapshot.val().lawyerVideo,\r\n        otherScreenshare: snapshot.val().lawyerScreenshare,\r\n        selfVideo: snapshot.val().clientVideo,\r\n        selfScreenshare: snapshot.val().clientScreenshare,\r\n      });\r\n    });\r\n    const docRef = firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + this.state.callUserValue + \"/message/callStatus\");\r\n    docRef.on(\"value\", (snapshot) => {\r\n      if (snapshot.val()) {\r\n        if (!self.state.callStatus) {\r\n          console.log(\"Got a notification that lawyer accepted the call\");\r\n          message.success(\"lawyer accepted. connecting...\", 1.5);\r\n          self.setState({\r\n            callStatus: snapshot.val(),\r\n            spin: false,\r\n            myVideo: false,\r\n          });\r\n          //self.state.recordVideo.startRecording();\r\n          self.videoCall();\r\n        }\r\n      } else {\r\n        if (self.state.callStatus) {\r\n          self.timerRef.pause();\r\n          self.state.recordVideo.stopRecording(function () {\r\n            let blob = self.state.recordVideo.getBlob();\r\n\r\n            firebase\r\n              .storage()\r\n              .ref()\r\n              .child(\r\n                self.state.callUserValue +\r\n                  \"/\" +\r\n                  self.state.startTime +\r\n                  \"/client\"\r\n              )\r\n              .put(blob)\r\n              .then(function (snapshot) {\r\n                console.log(\"recording uploaded, process completed\");\r\n                message.success(\"Recording uploaded\");\r\n              });\r\n          });\r\n          firebase\r\n            .database()\r\n            .ref(\r\n              \"/Accounts/\" + self.state.callUserValue + \"/message/callStatus\"\r\n            )\r\n            .off();\r\n          firebase\r\n            .database()\r\n            .ref(\"/Accounts/\" + self.state.callUserValue + \"/message\")\r\n            .off();\r\n          firebase\r\n            .database()\r\n            .ref(\"/Accounts/\" + self.state.callUserValue + \"/ice\")\r\n            .off();\r\n          self.setState({\r\n            callStatus: snapshot.val(),\r\n            callUser: \"\",\r\n            callFriend: false,\r\n            landingPage: true,\r\n          });\r\n          self.state.videoStream.getTracks().forEach(function (track) {\r\n            console.log(track);\r\n            track.stop();\r\n          });\r\n\r\n          //self.state.pc.close()\r\n          self.state.pc = null;\r\n          message.success(\"Call ended\");\r\n          console.log(\"call ended by either of the participants\");\r\n          self.endClientCall();\r\n        }\r\n      }\r\n    });\r\n  };\r\n  //webrtc\r\n  sendMessageToCall(senderId, data) {\r\n    var msg = firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + this.state.callUserValue + \"/message\")\r\n      .update({ sender: senderId, message: data });\r\n  }\r\n\r\n  sendMessageToCallICE(senderId, data) {\r\n    var msg = firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + this.state.callUserValue + \"/ice/clientIce\")\r\n      .update({ [Date.now()]: data });\r\n  }\r\n\r\n  sendMessage(senderId, data) {\r\n    var msg = firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + this.state.username + \"/message\")\r\n      .update({ sender: senderId, message: data });\r\n  }\r\n  sendMessageICE(senderId, data) {\r\n    console.log(Date.now(), data);\r\n    var msg = firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + this.state.username + \"/ice/lawyerIce\")\r\n      .update({ [Date.now()]: data });\r\n  }\r\n\r\n  endCall = () => {\r\n    const endTime = Date.now();\r\n\r\n    if (!this.state.callFriend)\r\n      firebase\r\n        .database()\r\n        .ref(\"/Accounts/\" + this.state.username + \"/message\")\r\n        .update({ callStatus: false, endTime: endTime });\r\n    else {\r\n      firebase\r\n        .database()\r\n        .ref(\"/Accounts/\" + this.state.callUserValue + \"/message\")\r\n        .update({ callStatus: false, endTime: endTime });\r\n    }\r\n  };\r\n  onDrawerClose = () => {\r\n    this.setState({\r\n      drawerVisible: false,\r\n    });\r\n  };\r\n  showDrawer = () => {\r\n    this.setState({\r\n      drawerVisible: true,\r\n    });\r\n  };\r\n\r\n  onSwiping = (event) => {\r\n    console.log(event);\r\n\r\n    if (event.dir === LEFT) {\r\n      if (!this.state.myVideo) {\r\n        this.setState({ myVideo: true });\r\n      }\r\n    }\r\n    if (event.dir === RIGHT) {\r\n      if (this.state.myVideo) {\r\n        this.setState({ myVideo: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  clientIncomingCallRequest = (clientData) => {\r\n    console.log(\"hoolaaa\", clientData);\r\n    //global state of current client details for lawyer\r\n  };\r\n\r\n  setlawyer = () => {\r\n    const self = this;\r\n    this.setState({ isLawyer: true, landingPage: false });\r\n    console.log(\"setlawyer fuction called\");\r\n    const callerPicRef = firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + this.state.username + \"/message\");\r\n    callerPicRef.on(\"value\", (snapshot) => {\r\n      this.clientIncomingCallRequest(snapshot.val());\r\n      this.setState({\r\n        callerProfilePic: snapshot.val().callerProfilePic,\r\n      });\r\n    });\r\n    const docRef2 = firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + this.state.username + \"/message/callStatus\");\r\n    docRef2.on(\"value\", (snapshot2) => {\r\n      if (snapshot2.val()) {\r\n        if (!self.state.callStatus) {\r\n          console.log(\r\n            \"Lawyer accept the call and webrtc process is about to start\"\r\n          );\r\n          //self.state.recordVideo.startRecording();\r\n          self.videoCall();\r\n          self.setState({ callStatus: snapshot2.val() });\r\n        }\r\n      } else {\r\n        if (self.state.callStatus) {\r\n          self.state.recordVideo.stopRecording(function () {\r\n            let blob = self.state.recordVideo.getBlob();\r\n            firebase\r\n              .storage()\r\n              .ref()\r\n              .child(self.state.username + \"/\" + self.state.startTime)\r\n              .put(blob)\r\n              .then(function (snapshot) {\r\n                console.log(\"recording uploaded, processes finished\");\r\n\r\n                const startTime = self.state.startTime;\r\n                firebase\r\n                  .database()\r\n                  .ref(\"/Accounts/\" + self.state.username + \"/timeline\")\r\n                  .update({ [startTime]: self.state.callerId });\r\n                firebase\r\n                  .database()\r\n                  .ref(\"/Accounts/\" + self.state.username + \"/message\")\r\n                  .update({\r\n                    startTime: null,\r\n                    callRequest: false,\r\n                    message: null,\r\n                    sender: self.state.username,\r\n                  });\r\n\r\n                firebase\r\n                  .database()\r\n                  .ref(\"/Accounts/\" + self.state.username + \"/ice\")\r\n                  .off();\r\n                firebase\r\n                  .database()\r\n                  .ref(\r\n                    \"/Accounts/\" + self.state.username + \"/message/callStatus\"\r\n                  )\r\n                  .off();\r\n\r\n                self.state.pc.close();\r\n                self.state.pc = null;\r\n                self.state.recordVideo.reset();\r\n                message.success(\"Recording uploaded\");\r\n              });\r\n          });\r\n          self.state.videoStream.getTracks().forEach(function (track) {\r\n            console.log(track);\r\n            track.stop();\r\n          });\r\n          self.setState({\r\n            callStatus: snapshot2.val(),\r\n            isLawyer: false,\r\n            landingPage: true,\r\n          });\r\n          self.endLawyerCall();\r\n          message.success(\"Call ended by one of the participants\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  resetAfterCall = () => {\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + this.props.username)\r\n      .update({\r\n        currentOnline: false,\r\n        webRTC: {},\r\n      });\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + this.props.username + \"/message\")\r\n      .update({\r\n        startTime: null,\r\n        callRequest: false,\r\n        callStatus: false,\r\n        reject: false,\r\n        message: null,\r\n        lawyerVideo: false,\r\n        clientVideo: false,\r\n        lawyerScreenshare: false,\r\n        clientScreenshare: false,\r\n        sender: this.props.username,\r\n      });\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + this.props.username + \"/ice\")\r\n      .update({\r\n        clientIce: null,\r\n        lawyerIce: null,\r\n      });\r\n  };\r\n\r\n  endLawyerCall = () => {\r\n    let self = this;\r\n    const videoTrackLawyer = senders.find(\r\n      (sender) => sender.track.kind === \"video\"\r\n    );\r\n    videoTrackLawyer.track.stop();\r\n    const audioTrackLawyer = senders.find(\r\n      (sender) => sender.track.kind === \"audio\"\r\n    );\r\n    audioTrackLawyer.track.stop();\r\n    self.timerRef.pause();\r\n    self.state.recordVideo.stopRecording(function () {\r\n      let blob = self.state.recordVideo.getBlob();\r\n      firebase\r\n        .storage()\r\n        .ref()\r\n        .child(self.state.username + \"/\" + self.state.startTime + \"/lawyer\")\r\n        .put(blob)\r\n        .then(function (snapshot) {\r\n          console.log(\"recording uploaded, process completed\");\r\n          message.success(\"Recording uploaded\");\r\n        });\r\n    });\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + self.state.username + \"/message/callStatus\")\r\n      .off();\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + self.state.username + \"/message\")\r\n      .off();\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + self.state.username + \"/ice\")\r\n      .off();\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + self.state.username + \"/clientName\")\r\n      .off();\r\n    self.setState({\r\n      callStatus: false,\r\n    });\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + self.state.username + \"/clientName\")\r\n      .on(\"value\", (snap) => {\r\n        firebase\r\n          .database()\r\n          .ref(\r\n            `Accounts/${this.state.username}/PastCalls/${this.state.startTime}`\r\n          )\r\n          .update({\r\n            clientName: snap.val(),\r\n            messages: this.state.allMessages,\r\n            videoIdNode: this.state.startTime,\r\n          });\r\n      });\r\n\r\n    senders = [];\r\n    this.resetAfterCall();\r\n    this.props.endCallDispatch(\"lawyer\");\r\n  };\r\n\r\n  //end client call function\r\n  endClientCall = () => {\r\n    const videoTrackClient = senders.find(\r\n      (sender) => sender.track.kind === \"video\"\r\n    );\r\n    videoTrackClient.track.stop();\r\n    const audioTrackClient = senders.find(\r\n      (sender) => sender.track.kind === \"audio\"\r\n    );\r\n\r\n    audioTrackClient.track.stop();\r\n    senders = [];\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + this.props.username)\r\n      .update({\r\n        webRTC: {},\r\n      });\r\n    this.props.endCallDispatch(\"client\");\r\n  };\r\n\r\n  onSpecialityChange = (value) => {\r\n    this.setState({ lawyerSpeciality: value });\r\n    console.log(value);\r\n  };\r\n\r\n  onTierChange = (value) => {\r\n    this.setState({ lawyerTier: value });\r\n    console.log(value);\r\n  };\r\n\r\n  stopTimer = () => {\r\n    const duration = this.timerRef.getTime();\r\n    let meetingCost = (duration / 60000) * this.state.lawyerTier;\r\n\r\n    firebase\r\n      .database()\r\n      .ref(\r\n        \"Accounts/\" + this.state.username + \"/PastCalls/\" + this.state.startTime\r\n      )\r\n      .update({ callDuration: parseInt(duration) })\r\n      .then(() => {\r\n        if (this.state.creator) {\r\n          if (this.state.lawyerFarm === \"self\") {\r\n            console.log(meetingCost);\r\n            firebase\r\n              .database()\r\n              .ref(\"Accounts/\" + this.state.username)\r\n              .update({\r\n                balance: firebase.database.ServerValue.increment(meetingCost),\r\n              });\r\n          } else {\r\n            console.log(meetingCost);\r\n\r\n            console.log(this.state.lawyerFirm);\r\n            firebase\r\n              .database()\r\n              .ref(\"/Firms/\" + this.state.lawyerFirm)\r\n              .update({\r\n                balance: firebase.database.ServerValue.increment(meetingCost),\r\n              });\r\n          }\r\n        } else {\r\n          firebase\r\n            .database()\r\n            .ref(\"Accounts/\" + this.state.username)\r\n            .update({\r\n              balance: firebase.database.ServerValue.increment(-meetingCost),\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  findLawyer = () => {\r\n    const self = this;\r\n    this.setState({ isLawyer: false, landingPage: false });\r\n    const docRef = firebase.database().ref(\"/Accounts/\");\r\n    docRef.on(\"child_added\", function (snapshot) {\r\n      const lawyer = snapshot.val();\r\n      if (\r\n        lawyer.currentOnline &&\r\n        !lawyer.message.callRequest &&\r\n        !lawyer.message.callStatus\r\n      ) {\r\n        docRef.off();\r\n        console.log(\"found a lawyer who is online\");\r\n        console.log(snapshot.key);\r\n        self.setState({ callUserValue: snapshot.key }, () => {\r\n          self.callUser(snapshot.key);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // onSend(messages = []) {\r\n  //   var data = {};\r\n\r\n  //   data.type = \"text\";\r\n  //   data.message = messages[0].text;\r\n  //   console.log(messages[0].text);\r\n  //   this.state.dataChannel.send(JSON.stringify(data));\r\n  //   this.setState((previousState) => ({\r\n  //     messages: GiftedChat.append(previousState.messages, messages),\r\n  //   }));\r\n  // }\r\n\r\n  onSend = async () => {\r\n    var data = {};\r\n\r\n    data.type = \"text\";\r\n    data.message = this.state.text;\r\n    data.id = 1;\r\n    if (this.state.text.length > 0) {\r\n      await this.state.dataChannel.send(JSON.stringify(data));\r\n      if (this.state.creator) {\r\n        await this.setState((prevState) => ({\r\n          allMessages: {\r\n            ...prevState.allMessages,\r\n            [`${Date.now()}_lawyer`]: this.state.text,\r\n          },\r\n          messages: [\r\n            ...prevState.messages,\r\n            new Message({ id: 0, message: this.state.text }),\r\n          ],\r\n        }));\r\n      } else {\r\n        await this.setState((prevState) => ({\r\n          messages: [\r\n            ...prevState.messages,\r\n            new Message({ id: 0, message: this.state.text }),\r\n          ],\r\n        }));\r\n      }\r\n    }\r\n    await this.setState({ text: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const height = window.innerHeight;\r\n    const videoMargin = (window.innerHeight - (window.innerWidth * 3) / 4) / 16;\r\n    let width = window.innerWidth;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#212121\",\r\n          zIndex: \"inherit\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 20,\r\n            right: 20,\r\n            backgroundColor: \"#fff3\",\r\n            padding: 5,\r\n            borderRadius: 5,\r\n            zIndex: 2,\r\n          }}\r\n        >\r\n          <Timer\r\n            startImmediately={false}\r\n            ref={(node) => {\r\n              this.timerRef = node;\r\n            }}\r\n            onPause={this.stopTimer}\r\n          >\r\n            <>\r\n              <Timer.Minutes />:<Timer.Seconds /> mins\r\n            </>\r\n          </Timer>\r\n        </div>\r\n        <div\r\n          style={{ position: \"absolute\", top: 20, left: 20, zIndex: 2 }}\r\n          className=\"steps-overlay\"\r\n        >\r\n          <Button\r\n            onClick={this.showDrawer}\r\n            icon={<MessageOutlined />}\r\n            shape=\"circle\"\r\n          />\r\n\r\n          {this.state.creator ? (\r\n            <AppointmentModalButton\r\n              username={this.state.username}\r\n              callerId={this.state.callerId}\r\n            />\r\n          ) : null}\r\n        </div>\r\n\r\n        <Spin\r\n          style={{\r\n            position: \"absolute\",\r\n            marginTop: height / 2,\r\n            marginLeft: \"50%\",\r\n          }}\r\n          spinning={this.state.spin}\r\n        />\r\n\r\n        <div>\r\n          <div className=\"inner-container\" style={{ height: height }}>\r\n            <div className=\"video-on-video-overlay\">\r\n              <video\r\n                style={{\r\n                  height: height / 4,\r\n                  position: \"absolute\",\r\n                  bottom: 10,\r\n                  right: 10,\r\n                  zIndex: 1,\r\n\r\n                  transform: this.state.screenShare ? null : \"scaleX(-1)\",\r\n                }}\r\n                loop\r\n                ref={this.yourVideo}\r\n                autoPlay\r\n                muted\r\n                playsInline\r\n              ></video>\r\n            </div>\r\n            <div className=\"textCall-overlay\" danger=\"true\"></div>\r\n            <div className=\"video-overlay\">\r\n              <IconButton\r\n                disabled={this.state.screenShare ? true : false}\r\n                aria-label=\"Mute Video\"\r\n                onClick={this.stopVideo}\r\n                style={{\r\n                  backgroundColor: this.state.screenShare\r\n                    ? \"#79a3b1\"\r\n                    : !this.state.videoOn\r\n                    ? \"#ff5e78\"\r\n                    : null,\r\n                }}\r\n              >\r\n                {this.state.videoOn ? (\r\n                  <VideocamRounded style={{ fontSize: 35, color: \"#fff\" }} />\r\n                ) : (\r\n                  <VideocamOffRounded style={{ fontSize: 35, color: \"#fff\" }} />\r\n                )}\r\n              </IconButton>\r\n\r\n              <IconButton\r\n                onClick={this.endCall}\r\n                style={{ backgroundColor: \"#ff5e78\" }}\r\n              >\r\n                <CallEndRounded style={{ fontSize: 35, color: \"#fff\" }} />\r\n              </IconButton>\r\n\r\n              <IconButton\r\n                aria-label=\"Mute Audio\"\r\n                onClick={this.stopAudio}\r\n                style={{\r\n                  backgroundColor: !this.state.audioOn ? \"#ff5e78\" : null,\r\n                }}\r\n              >\r\n                {this.state.audioOn ? (\r\n                  <MicRounded style={{ fontSize: 35, color: \"#fff\" }} />\r\n                ) : (\r\n                  <MicOffRounded style={{ fontSize: 35, color: \"#fff\" }} />\r\n                )}\r\n              </IconButton>\r\n\r\n              <IconButton\r\n                aria-label=\"Mute Screen\"\r\n                onClick={this.shareScreen}\r\n                style={{\r\n                  backgroundColor: !this.state.screenShare ? \"#ff5e78\" : null,\r\n                }}\r\n              >\r\n                {this.state.screenShare ? (\r\n                  <ScreenShareRounded style={{ fontSize: 35, color: \"#fff\" }} />\r\n                ) : (\r\n                  <StopScreenShareRounded\r\n                    style={{ fontSize: 35, color: \"#fff\" }}\r\n                  />\r\n                )}\r\n              </IconButton>\r\n\r\n              <Drawer\r\n                title={`Live Chat ${\r\n                  this.state.creator\r\n                    ? this.state.displayName\r\n                    : this.state.displayName\r\n                }`}\r\n                placement=\"left\"\r\n                closable={true}\r\n                width={width * 0.33}\r\n                onClose={this.onDrawerClose}\r\n                visible={this.state.drawerVisible}\r\n                footer={\r\n                  <div\r\n                    style={{\r\n                      textAlign: \"centre\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-evenly\",\r\n                    }}\r\n                  >\r\n                    {/* <input\r\n                      id=\"inputFile\"\r\n                      className=\"inputFile\"\r\n                      type=\"file\"\r\n                      onChange={(e) => {\r\n                        this.fileSelect(e);\r\n                        console.log(e);\r\n                      }}\r\n                      size=\"60\"\r\n                      style={{\r\n                        display: \"block\",\r\n                        float: \"left\",\r\n                        padding: \"22px 15px 0 15px\",\r\n                      }}\r\n                    ></input> */}\r\n                    <input\r\n                      style={{ display: \"none\" }}\r\n                      id=\"contained-button-file\"\r\n                      className=\"inputFile\"\r\n                      type=\"file\"\r\n                      onChange={(e) => {\r\n                        this.fileSelect(e);\r\n                      }}\r\n                    />\r\n                    <label htmlFor=\"contained-button-file\">\r\n                      <MButton\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        component=\"span\"\r\n                      >\r\n                        Upload File\r\n                      </MButton>\r\n                    </label>\r\n                    {/* <Button\r\n                      className=\"Save-button\"\r\n                      size=\"small\"\r\n                      onClick={this.saveToDisk}\r\n                      variant=\"contained\"\r\n                      color=\"default\"\r\n                      style={{\r\n                        marginLeft: \"15px\",\r\n                        padding: \"5px\",\r\n                        borderRadius: \"10px\",\r\n                      }}\r\n                    >\r\n                      Save\r\n                    </Button> */}\r\n                    <h5\r\n                      style={{ display: this.state.fileRec ? \"flex\" : \"none\" }}\r\n                    >\r\n                      {this.state.fileRecName}\r\n                    </h5>\r\n                    <div\r\n                      style={{\r\n                        display: this.state.fileRec ? \"flex\" : \"none\",\r\n                        justifyContent: \"space-around\",\r\n                        width: width * 0.15,\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <MButton\r\n                        onClick={this.saveToDisk}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        component=\"span\"\r\n                      >\r\n                        Save File\r\n                      </MButton>\r\n                      {/* <Button\r\n                      aria-label=\"delete\"\r\n                      onClick={this.deleteReceivedfile}\r\n                    >\r\n                      Delete\r\n                    </Button> */}\r\n                      <MButton\r\n                        onClick={this.deleteReceivedfile}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        component=\"span\"\r\n                      >\r\n                        Delete File\r\n                      </MButton>\r\n                    </div>\r\n                  </div>\r\n                }\r\n              >\r\n                {/* <GiftedChat\r\n                  messages={this.state.messages}\r\n                  onSend={(messages) => this.onSend(messages)}\r\n                  user={{\r\n                    id: this.state.username,\r\n                  }}\r\n                /> */}\r\n\r\n                <ChatFeed\r\n                  messages={this.state.messages} // Array: list of message objects\r\n                  bubblesCentered={false} //Boolean should the bubbles be centered in the feed?\r\n                  bubbleStyles={{\r\n                    text: {\r\n                      fontSize: 10,\r\n                    },\r\n                    chatbubble: {\r\n                      borderRadius: 70,\r\n                      padding: 8,\r\n                    },\r\n                  }}\r\n                />\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    bottom: 70,\r\n                    left: 0,\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  <input\r\n                    value={this.state.text}\r\n                    placeholder=\"Enter text here\"\r\n                    style={{ width: width * 0.3, border: \"none\", padding: 5 }}\r\n                    onChange={(e) => {\r\n                      this.changeTextMessage(e);\r\n                    }}\r\n                    onKeyPress={(event) => {\r\n                      if (event.key === \"Enter\") {\r\n                        this.onSend();\r\n                      }\r\n                    }}\r\n                  />\r\n                  <IconButton\r\n                    onClick={this.onSend}\r\n                    style={{ backgroundColor: \"#fff\" }}\r\n                  >\r\n                    <Send style={{ fontSize: 20, color: \"#11698e\" }} />\r\n                  </IconButton>\r\n                </div>\r\n              </Drawer>\r\n            </div>\r\n\r\n            <video\r\n              className=\"video-friend\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 0,\r\n                left: 0,\r\n                width: \"100vw\",\r\n                height: \"100vh\",\r\n                background: \"black\",\r\n                objectFit: \"cover\",\r\n                display: this.state.otherVideo ? \"block\" : \"none\",\r\n              }}\r\n              ref={this.friendsVideo}\r\n              autoPlay\r\n              playsInline\r\n            ></video>\r\n          </div>\r\n        </div>\r\n        {!this.state.otherVideo ? (\r\n          <RenderCenteredUserProfilePic\r\n            src={this.state.callerProfilePic || this.state.profilePic}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VideoCall;\r\n\r\nconst styles = StyleSheet.create({\r\n  logo: {\r\n    height: 80,\r\n  },\r\n  button: {\r\n    textAlign: \"center\",\r\n  },\r\n  header: {\r\n    padding: 20,\r\n  },\r\n  image: {\r\n    marginHorizontal: \"auto\",\r\n    marginVertical: 20,\r\n    textAlign: \"center\",\r\n    maxWidth: \"100%\",\r\n    cursor: \"pointer\",\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1.5rem\",\r\n    marginVertical: \"1em\",\r\n    textAlign: \"center\",\r\n  },\r\n  text: {\r\n    lineHeight: \"1.5em\",\r\n    fontSize: \"1.125rem\",\r\n    marginVertical: \"1em\",\r\n    textAlign: \"center\",\r\n  },\r\n  link: {\r\n    color: \"#1B95E0\",\r\n  },\r\n  code: {\r\n    fontFamily: \"monospace, monospace\",\r\n  },\r\n});\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\Firm\\FirmLandingPage\\FirmLandingPage.js",["310","311","312","313"],"import React, { useState } from \"react\";\r\nimport { Input, Button } from \"antd\";\r\nimport { View, Image } from \"react-native\";\r\nimport useGlobalStyles from \"../../../Hooks/useGlobalStyles\";\r\nimport firebase from \"firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { SET_KEYS_TRUE, UPDATE_USER_DATA } from \"../../../Store/actions\";\r\nimport useActionDispatcher from \"../../../Hooks/useActionDispatcher\";\r\n\r\nexport default function FirmLandingPage({ fullHeight, fullWidth }) {\r\n  const styles = useGlobalStyles();\r\n  const width = fullWidth * 0.3;\r\n  const height = fullWidth * 0.15;\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const userData = useSelector((state) => state.globalUserData);\r\n  const state = useSelector((state) => state.globalStateData);\r\n  const dispatchAction = useActionDispatcher();\r\n  const emailpasswordLogin = () => {\r\n    firebase\r\n      .auth()\r\n      .fetchSignInMethodsForEmail(email)\r\n      .then((checkuser) => {\r\n        if (checkuser.length > 0) {\r\n          console.log(\"EXISTS\");\r\n          firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then((result) => {\r\n              const user = result.user;\r\n              console.log(user);\r\n              const userId = user[\"uid\"];\r\n              dispatchAction(SET_KEYS_TRUE, {\r\n                keys: [\"firmHome\"],\r\n              });\r\n              dispatchAction(UPDATE_USER_DATA, {\r\n                data: {\r\n                  username: userId,\r\n                  email: user[\"email\"],\r\n                  displayName: user[\"displayName\"],\r\n                },\r\n              });\r\n            });\r\n        } else {\r\n          console.log(\"DOESN'T EXIST\");\r\n          firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then((result) => {\r\n              const user = result.user;\r\n              console.log(user);\r\n              const userId = user[\"uid\"];\r\n              user\r\n                .updateProfile({ displayName: email.split(\"@\", 1)[0] })\r\n                .then(() => {\r\n                  firebase\r\n                    .database()\r\n                    .ref(\"/Firms/\" + userId)\r\n                    .update({\r\n                      name: user[\"displayName\"],\r\n                      email: user[\"email\"],\r\n                    });\r\n                });\r\n              dispatchAction(SET_KEYS_TRUE, {\r\n                keys: [\"firmHome\"],\r\n              });\r\n              dispatchAction(UPDATE_USER_DATA, {\r\n                data: {\r\n                  username: userId,\r\n                  email: user[\"email\"],\r\n                  displayName: user[\"displayName\"],\r\n                },\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        const errorcode = error.code;\r\n        const errorMessage = error.message;\r\n        const email = error.email;\r\n        const credential = error.credential;\r\n        console.log(errorMessage, errorcode);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View\r\n      classname=\"login-page\"\r\n      style={{\r\n        width: width,\r\n        marginLeft: fullWidth * 0.35,\r\n        borderTopWidth: fullHeight * 0.25,\r\n        borderColor: \"#ffffff\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      <View>\r\n        <Image\r\n          onClick={() => {\r\n            window.location.href = \"/\";\r\n          }}\r\n          style={styles.image}\r\n          source={{ uri: \"logo.png\", width, height }}\r\n        />\r\n      </View>\r\n\r\n      <Input\r\n        placeholder=\"Enter Firm Email\"\r\n        inputMode=\"email\"\r\n        style={{ marginBottom: 20 }}\r\n        size=\"large\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <Input.Password\r\n        placeholder=\"Enter Password\"\r\n        size=\"large\"\r\n        style={{ marginBottom: 20 }}\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <Button onClick={emailpasswordLogin} type=\"primary\">\r\n        Sign in\r\n      </Button>\r\n    </View>\r\n  );\r\n}\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Hooks\\useGlobalStyles.js",[],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\AppointmentModalButton.js",[],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\VideoCall\\RenderCenteredUserProfilePic.js",[],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\RenderContactUs.js",[],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\RenderAboutUs.js",[],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\RenderClientProfile.js",[],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\RenderClientWallet.js",["314","315","316"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactPayPal from \"../ReactPaypal/ReactPayPal\";\r\nimport { TextField, InputAdornment } from \"@material-ui/core\";\r\nimport { AttachMoney } from \"@material-ui/icons\";\r\nimport { Button, Spin } from \"antd\";\r\nimport firebase from \"../../firebase_config\";\r\n\r\nconst initialState = {\r\n  amount: \"\",\r\n};\r\nconst RenderClientWallet = ({ height }) => {\r\n  const userId = firebase.auth().currentUser.uid;\r\n\r\n  const [checkout, setCheckout] = React.useState(false);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [accountBalance, setAccountBalance] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .database()\r\n      .ref(`Accounts/${userId}/balance`)\r\n      .on(\"value\", (snap) => {\r\n        if (snap.val()) {\r\n          setAccountBalance(snap.val());\r\n        } else {\r\n          setAccountBalance(\"0\");\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const onChangeAmount = (e) => {\r\n    const re = /^[0-9\\b]+$/;\r\n    if (e.target.value === \"\" || re.test(e.target.value)) {\r\n      setError(false);\r\n      setAmount(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleCheckout = () => {\r\n    if (amount.length > 0) {\r\n      setCheckout(true);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {checkout === true ? (\r\n          <div className=\"payment-div\">\r\n            <ReactPayPal amount={amount} height={height} />\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              width: \"100%\",\r\n              height: height,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <h1 style={{ marginBottom: 30, color: \"#000\" }}>\r\n              Balance: $ {accountBalance != \"\" ? parseFloat(accountBalance).toFixed(2) : <Spin />}\r\n            </h1>\r\n            <TextField\r\n              error={error}\r\n              id=\"outlined-basic\"\r\n              label=\"Enter Amount\"\r\n              variant=\"outlined\"\r\n              autoComplete=\"off\"\r\n              helperText={\r\n                error\r\n                  ? \"Enter a valid Amount\"\r\n                  : \"Enter Amount to be added in your wallet\"\r\n              }\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <AttachMoney />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              style={{ marginBottom: 20 }}\r\n              value={amount}\r\n              onChange={(e) => onChangeAmount(e)}\r\n            />\r\n            <Button\r\n              style={{ backgroundColor: \"#000\", border: \"none\" }}\r\n              onClick={handleCheckout}\r\n              type=\"primary\"\r\n            >\r\n              Checkout\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RenderClientWallet;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\RenderFindLawyer.js",["317","318","319"],"import { Button, Col, Row, Select, Steps } from \"antd\";\r\nimport { Option } from \"antd/lib/mentions\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GoogleMap, Marker, withGoogleMap } from \"react-google-maps\";\r\nimport { lawyerSpecialties } from \"../utils/LawyerSpecialtiesList\";\r\nimport useActionDispatcher from \"../../Hooks/useActionDispatcher\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { SET_KEYS_TRUE, UPDATE_USER_DATA } from \"../../Store/actions\";\r\n\r\n//google maps\r\n\r\nlet iconMarker = new window.google.maps.MarkerImage(\r\n  \"https://www.pikpng.com/pngl/m/202-2029870_select-a-svg-png-free-download-comments-lawyer.png\",\r\n  null /* size is determined at runtime */,\r\n  null /* origin is 0,0 */,\r\n  null /* anchor is bottom center of the scaled image */,\r\n  new window.google.maps.Size(32, 32)\r\n);\r\n\r\nvar lat;\r\nvar long;\r\nvar options = {\r\n  enableHighAccuracy: true,\r\n  timeout: 5000,\r\n  maximumAge: 0,\r\n};\r\nfunction error(err) {\r\n  console.warn(`ERROR(${err.code}): ${err.message}`);\r\n}\r\n\r\nconst GoogleMapExample = withGoogleMap((props) => (\r\n  <GoogleMap\r\n    defaultCenter={{ lat: 12.9619, lng: 77.597 }}\r\n    defaultZoom={13}\r\n    options={{\r\n      mapTypeControl: false,\r\n      streetViewControl: false,\r\n      fullscreenControl: false,\r\n    }}\r\n  >\r\n    <Marker\r\n      icon={iconMarker}\r\n      position={{ lat: parseFloat(lat), lng: parseFloat(long) }}\r\n    />\r\n    <Marker\r\n      icon={iconMarker}\r\n      position={{ lat: parseFloat(lat + 0.01), lng: parseFloat(long + 0.031) }}\r\n    />\r\n    <Marker\r\n      icon={iconMarker}\r\n      position={{ lat: parseFloat(lat + 0.039), lng: parseFloat(long + 0.03) }}\r\n    />\r\n    <Marker\r\n      icon={iconMarker}\r\n      position={{ lat: parseFloat(lat + 0.025), lng: parseFloat(long + 0.13) }}\r\n    />\r\n    <Marker\r\n      icon={iconMarker}\r\n      position={{ lat: parseFloat(lat + 0.076), lng: parseFloat(long + 0.038) }}\r\n    />\r\n    <Marker\r\n      icon={iconMarker}\r\n      position={{ lat: parseFloat(lat + 0.053), lng: parseFloat(long - 0.066) }}\r\n    />\r\n    <Marker\r\n      icon={iconMarker}\r\n      position={{ lat: parseFloat(lat + 0.045), lng: parseFloat(long - 0.078) }}\r\n    />\r\n    <Marker\r\n      icon={iconMarker}\r\n      position={{ lat: parseFloat(lat + 0.08), lng: parseFloat(long + 0.09) }}\r\n    />\r\n    <Marker\r\n      icon={iconMarker}\r\n      position={{ lat: parseFloat(lat + 0.06), lng: parseFloat(long + 0.09) }}\r\n    />\r\n    <Marker\r\n      icon={iconMarker}\r\n      position={{ lat: parseFloat(lat - 0.03), lng: parseFloat(long - 0.08) }}\r\n    />\r\n    <Marker\r\n      icon={iconMarker}\r\n      position={{ lat: parseFloat(lat + 0.067), lng: parseFloat(long + 0.09) }}\r\n    />\r\n    <Marker\r\n      icon={iconMarker}\r\n      position={{ lat: parseFloat(lat - 0.083), lng: parseFloat(long - 0.098) }}\r\n    />\r\n    <Marker\r\n      icon={iconMarker}\r\n      position={{ lat: parseFloat(lat + 0.019), lng: parseFloat(long + 0.059) }}\r\n    />\r\n    <Marker\r\n      icon={iconMarker}\r\n      position={{ lat: parseFloat(lat - 0.081), lng: parseFloat(long - 0.029) }}\r\n    />\r\n  </GoogleMap>\r\n));\r\n\r\nconst steps = [\r\n  {\r\n    title: \"Select Lawyer Specialties\",\r\n  },\r\n  {\r\n    title: \"Select Lawyer Tier\",\r\n  },\r\n];\r\nconst RenderSpecialitySelection = ({ handleSpecialityChange }) => {\r\n  return (\r\n    <Select\r\n      showSearch\r\n      style={{ width: \"80%\", marginLeft: \"5%\", height: 40, fontSize: 16 }}\r\n      placeholder=\"Please select specialities\"\r\n      onChange={handleSpecialityChange}\r\n    >\r\n      {lawyerSpecialties.map(function (item, key) {\r\n        return <Option key={item}>{item}</Option>;\r\n      })}\r\n    </Select>\r\n  );\r\n};\r\nconst RenderTierSelection = ({ handleTierChange }) => {\r\n  return (\r\n    <Select\r\n      showSearch\r\n      style={{ width: \"80%\", marginLeft: \"5%\", height: 40, fontSize: 16 }}\r\n      placeholder=\"Years of qualification\"\r\n      optionFilterProp=\"children\"\r\n      onChange={handleTierChange}\r\n      filterOption={(input, option) =>\r\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n    >\r\n      <Option value=\"X\">LawMax X (1-7 years)</Option>\r\n      <Option value=\"XL\">Lawmax XL (8-16)</Option>\r\n      <Option value=\"EXEC\">Lawmax EXEC (>16)</Option>\r\n    </Select>\r\n  );\r\n};\r\n\r\nconst RenderFindLawyer = ({}) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [visible, setVisible] = useState(false);\r\n  const dispatchAction = useActionDispatcher();\r\n\r\n  useEffect(() => {\r\n    console.log(\"use effect, find lawyer \");\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        lat = position.coords.latitude;\r\n        long = position.coords.longitude;\r\n        console.log(\"Latitude is :\", position.coords.latitude);\r\n        console.log(\"Longitude is :\", position.coords.longitude);\r\n      },\r\n      error,\r\n      options\r\n    );\r\n  }, []);\r\n  const handlePrev = () => {\r\n    setCurrentIndex((c) => {\r\n      if (c === 0) {\r\n        return 0;\r\n      } else {\r\n        return c - 1;\r\n      }\r\n    });\r\n  };\r\n  const handleNext = () => {\r\n    setCurrentIndex((c) => {\r\n      if (c === 1) {\r\n        return 1;\r\n      } else {\r\n        return c + 1;\r\n      }\r\n    });\r\n  };\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n    //navigateto userpage\r\n    dispatchAction(SET_KEYS_TRUE, {\r\n      keys: [\"userPage\"],\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n  const handleSpecialityChange = () => {\r\n    //store specialities\r\n    handleNext();\r\n  };\r\n  const handleTierChange = () => {\r\n    console.log(\"save tier and specialities\");\r\n  };\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          zIndex: 99,\r\n        }}\r\n      >\r\n        <Button\r\n          type=\"primary\"\r\n          style={{\r\n            position: \"fixed\",\r\n            left: \"6%\",\r\n            width: \"25%\",\r\n            top: \"1%\",\r\n            backgroundColor: \"#172A55\",\r\n            color: \"white\",\r\n            fontSize: 16,\r\n            height: 35,\r\n            paddingLeft: \"2%\",\r\n          }}\r\n          onClick={showModal}\r\n        >\r\n          Find Lawyer\r\n        </Button>\r\n      </div>\r\n      <Modal\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        title=\"Call Lawyer\"\r\n        footer={[\r\n          <Button key=\"Cancel\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button key=\"Find Lawyer\" type=\"primary\" onClick={handleOk}>\r\n            Find Lawyer\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Steps current={currentIndex}>\r\n          {steps.map((item) => (\r\n            <Steps.Step key={item.title} title={item.title} />\r\n          ))}\r\n        </Steps>\r\n        <Row gutter={16}>\r\n          {currentIndex === 0 ? (\r\n            <Col\r\n              span={24}\r\n              style={{\r\n                paddingTop: 20,\r\n                paddingLeft: 8,\r\n              }}\r\n            >\r\n              <RenderSpecialitySelection\r\n                handleSpecialityChange={handleSpecialityChange}\r\n              />\r\n            </Col>\r\n          ) : null}\r\n          {currentIndex === 1 ? (\r\n            <Col\r\n              span={24}\r\n              style={{\r\n                paddingTop: 20,\r\n                paddingLeft: 8,\r\n              }}\r\n            >\r\n              <RenderTierSelection handleTierChange={handleTierChange} />\r\n            </Col>\r\n          ) : null}\r\n        </Row>\r\n        <Row gutter={16}>\r\n          {currentIndex === 1 ? (\r\n            <Col\r\n              span={24}\r\n              style={{\r\n                paddingTop: 8,\r\n                paddingLeft: 20,\r\n              }}\r\n            >\r\n              <Button\r\n                style={{\r\n                  marginLeft: 12,\r\n                }}\r\n                type=\"primary\"\r\n                onClick={handlePrev}\r\n              >\r\n                Previous\r\n              </Button>\r\n            </Col>\r\n          ) : null}\r\n        </Row>\r\n      </Modal>\r\n      <GoogleMapExample\r\n        containerElement={\r\n          <div\r\n            style={{\r\n              overflow: \"hidden\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              height: window.innerHeight,\r\n              width: window.innerWidth,\r\n            }}\r\n          />\r\n        }\r\n        mapElement={<div style={{ height: `100%` }} />}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RenderFindLawyer;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\RenderClientDashboard.js",["320","321","322","323","324","325"],"import { Button, Card, Col, Row } from \"antd\";\r\nimport React, { useCallback, useState, useEffect } from \"react\";\r\nimport { Text } from \"react-native\";\r\nimport useGlobalStyles from \"../../Hooks/useGlobalStyles\";\r\nimport ClientAppointmentModal from \"./ClientAppointmentModal\";\r\nimport firebase from \"firebase\";\r\n\r\n\r\nconst RenderClientDashboard = ({ height, width,state }) => {\r\n  const styles = useGlobalStyles();\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n      firebase.database().ref(\"/Accounts/\" + state.username+\"/appointments/\").on('child_added', (snapshot) =>{\r\n\r\n        const data = snapshot.val();\r\n        console.log(data)\r\n\r\n            setAppointments((a) => [...a, data]);\r\n\r\n      })\r\n  },[]);\r\n\r\n  const handleOpenModal = () => {\r\n    setIsOpenModal(true);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"#fffff8\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <Row gutter={16}>\r\n        <Col span={24} style={{ paddingLeft: 20, paddingTop: 12 }}>\r\n          <Text style={styles.title}>Appointments</Text>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={16}>\r\n        <Col span={24} style={{ paddingLeft: 20 }}>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={16}>\r\n        {appointments.map((e, i) => (\r\n          <Col span={8} key={i} style={{ paddingLeft: 20 }}>\r\n            <Card\r\n              title={e.date}\r\n              style={{ width: 400, marginTop: \"2%\", height: 200 }}\r\n            >\r\n              <Card.Meta title={e.title} description={e.description} />\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RenderClientDashboard;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerHome\\RenderLawyerProfile.js",[],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerHome\\RenderLawyerDashboard.js",["326","327","328","329","330","331","332","333"],"import React, { useState, useEffect } from \"react\";\r\nimport { Image, Text, View } from \"react-native\";\r\nimport useGlobalStyles from \"../../Hooks/useGlobalStyles\";\r\n//import AppointmentModalButton from \"../RenderClientTier/AppointmentModalButton\";\r\nimport firebase from \"firebase\";\r\nimport useActionDispatcher from \"../../Hooks/useActionDispatcher\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { message, notification, Button, Avatar, Switch } from \"antd\";\r\nimport { SET_KEYS_TRUE, UPDATE_USER_DATA } from \"../../Store/actions\";\r\n\r\nvar docRef = null;\r\nconst RenderLawyerDashboard = ({ fullHeight, fullWidth }) => {\r\n  const picWidth = fullHeight * 0.15;\r\n  const styles = useGlobalStyles();\r\n  const [isChecked, setIsChecked] = useState(true);\r\n  const [callRequest, setCallRequest] = useState(false);\r\n  const userData = useSelector((state) => state.globalUserData);\r\n  const dispatchAction = useActionDispatcher();\r\n  const onSwitchChange = (event) => {\r\n    console.log(\"event value\", event);\r\n    availabilityToggle(event);\r\n  };\r\n\r\n  useEffect(() => {\r\n    docRef = firebase.database().ref(\"/Accounts/\" + userData.username + \"/\");\r\n    const response = {\r\n      id: \"8G467296EP549083V\",\r\n      intent: \"CAPTURE\",\r\n      status: \"COMPLETED\",\r\n      purchase_units: [\r\n        {\r\n          reference_id: \"default\",\r\n          amount: {\r\n            currency_code: \"USD\",\r\n            value: \"1.00\",\r\n          },\r\n          payee: {\r\n            email_address: \"lawmax08@gmail.com\",\r\n            merchant_id: \"ABLVFDWPDY4ME\",\r\n          },\r\n          description: \"Your description\",\r\n          soft_descriptor: \"PAYPAL *LAWMAX\",\r\n          shipping: {\r\n            name: {\r\n              full_name: \"Mohit Kumar\",\r\n            },\r\n            address: {\r\n              address_line_1: \"432 5th Main BDA Layout Domlur\",\r\n              admin_area_2: \"Bangalore\",\r\n              admin_area_1: \"Karnataka\",\r\n              postal_code: \"560071\",\r\n              country_code: \"IN\",\r\n            },\r\n          },\r\n          payments: {\r\n            captures: [\r\n              {\r\n                id: \"7TW55290WV4687512\",\r\n                status: \"PENDING\",\r\n                status_details: {\r\n                  reason: \"PENDING_REVIEW\",\r\n                },\r\n                amount: {\r\n                  currency_code: \"USD\",\r\n                  value: \"1.00\",\r\n                },\r\n                final_capture: true,\r\n                seller_protection: {\r\n                  status: \"ELIGIBLE\",\r\n                  dispute_categories: [\r\n                    \"ITEM_NOT_RECEIVED\",\r\n                    \"UNAUTHORIZED_TRANSACTION\",\r\n                  ],\r\n                },\r\n                links: [\r\n                  {\r\n                    href:\r\n                      \"https://api.paypal.com/v2/payments/captures/7TW55290WV4687512\",\r\n                    rel: \"self\",\r\n                    method: \"GET\",\r\n                  },\r\n                  {\r\n                    href:\r\n                      \"https://api.paypal.com/v2/payments/captures/7TW55290WV4687512/refund\",\r\n                    rel: \"refund\",\r\n                    method: \"POST\",\r\n                  },\r\n                  {\r\n                    href:\r\n                      \"https://api.paypal.com/v2/checkout/orders/8G467296EP549083V\",\r\n                    rel: \"up\",\r\n                    method: \"GET\",\r\n                  },\r\n                ],\r\n                create_time: \"2021-02-12T08:02:17Z\",\r\n                update_time: \"2021-02-12T08:02:17Z\",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      ],\r\n      payer: {\r\n        name: {\r\n          given_name: \"Mohit\",\r\n          surname: \"Kumar\",\r\n        },\r\n        email_address: \"moh.hit1012@gmail.com\",\r\n        payer_id: \"TPWWFESKKYP4J\",\r\n        address: {\r\n          country_code: \"IN\",\r\n        },\r\n      },\r\n      create_time: \"2021-02-12T07:59:57Z\",\r\n      update_time: \"2021-02-12T08:02:17Z\",\r\n      links: [\r\n        {\r\n          href: \"https://api.paypal.com/v2/checkout/orders/8G467296EP549083V\",\r\n          rel: \"self\",\r\n          method: \"GET\",\r\n        },\r\n      ],\r\n    };\r\n    console.log(response.purchase_units[0].payments.captures[0].id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"online ref called. userData:\", userData);\r\n    const onlineRef = firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + userData.username + \"/currentOnline\");\r\n    onlineRef.on(\"value\", (snapshot) => {\r\n      console.log(\"online ref called\");\r\n      dispatchAction(UPDATE_USER_DATA, {\r\n        data: {\r\n          isOnline: snapshot.val(),\r\n        },\r\n      });\r\n    });\r\n    docRef = firebase.database().ref(\"/Accounts/\" + userData.username + \"/\");\r\n  }, [userData.username]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"call request use effect\");\r\n    if (callRequest) {\r\n      notification.open({\r\n        message: `${userData.clientName} is calling ...`,\r\n        icon: <Avatar size={35} src={userData.clientProfilePic} />,\r\n        btn: (\r\n          <>\r\n            <Button style={{ paddingRight: 8 }} onClick={acceptCall}>\r\n              Accept\r\n            </Button>\r\n            <Button style={{ paddingLeft: 8 }} onClick={rejectCall}>\r\n              Reject\r\n            </Button>\r\n          </>\r\n        ),\r\n        key: \"call\",\r\n        duration: 0,\r\n        onClose: handleCloseNotification,\r\n      });\r\n    }\r\n  }, [callRequest]);\r\n\r\n  const handleCloseNotification = () => {\r\n    notification.close(\"call\");\r\n  };\r\n\r\n  const acceptCall = () => {\r\n    const startTime = Date.now();\r\n\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + userData.username + \"/message\")\r\n      .update({\r\n        callStatus: true,\r\n        startTime: startTime,\r\n        callRequest: false,\r\n      });\r\n    notification.close(\"call\");\r\n    // goto userpage\r\n    dispatchAction(SET_KEYS_TRUE, {\r\n      keys: [\"userPage\"],\r\n    });\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + userData.username + \"/message/\")\r\n      .off();\r\n  };\r\n\r\n  const rejectCall = () => {\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + userData.username + \"/message\")\r\n      .update({\r\n        callRequest: false,\r\n        reject: true,\r\n      });\r\n    notification.close(\"call\");\r\n  };\r\n\r\n  const availabilityToggle = (event) => {\r\n    console.log(userData);\r\n    if (event) {\r\n      firebase\r\n        .database()\r\n        .ref(\"/Accounts/\" + userData.username)\r\n        .update({\r\n          currentOnline: true,\r\n          webRTC: {},\r\n        });\r\n      firebase\r\n        .database()\r\n        .ref(\"/Accounts/\" + userData.username + \"/message\")\r\n        .update({\r\n          startTime: null,\r\n          callRequest: false,\r\n          callStatus: false,\r\n          reject: false,\r\n          message: null,\r\n          lawyerVideo: false,\r\n          clientVideo: false,\r\n          lawyerScreenshare: false,\r\n          clientScreenshare: false,\r\n          sender: userData.username,\r\n        });\r\n      firebase\r\n        .database()\r\n        .ref(\"/Accounts/\" + userData.username + \"/ice\")\r\n        .update({\r\n          clientIce: null,\r\n          lawyerIce: null,\r\n        });\r\n\r\n      docRef.on(\"value\", (snapshot) => {\r\n        // set global states call request, client profile pic, client name, currentOnline\r\n        console.log(\"listening to message works\", snapshot.val());\r\n        if (snapshot.val().message.callRequest) {\r\n          const updateAfterCallReq = async () => {\r\n            await dispatchAction(UPDATE_USER_DATA, {\r\n              data: {\r\n                clientProfilePic: snapshot.val().message.callerProfilePic,\r\n                clientName: snapshot.val().message.callerName,\r\n              },\r\n            });\r\n            await setCallRequest(true);\r\n          };\r\n          updateAfterCallReq();\r\n        }\r\n      });\r\n    } else {\r\n      firebase\r\n        .database()\r\n        .ref(\"/Accounts/\" + userData.username)\r\n        .update({\r\n          currentOnline: false,\r\n        });\r\n      docRef.off();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        maxWidth: \"100%\",\r\n        height: \"100%\",\r\n        margin: \"auto\",\r\n        top: \"10%\",\r\n      }}\r\n    >\r\n      <Image\r\n        style={{\r\n          width: \"18vh\",\r\n          height: \"20%\",\r\n          marginHorizontal: \"auto\",\r\n          borderRadius: \"50%\",\r\n        }}\r\n        source={{ uri: userData.profilePic }}\r\n      />\r\n      <Text style={styles.title}>{userData.displayName}</Text>\r\n\r\n      <Switch\r\n        style={{ width: \"25%\", marginLeft: \"38%\" }}\r\n        onChange={availabilityToggle}\r\n        unCheckedChildren=\"Offline\"\r\n        checkedChildren=\"Online\"\r\n        checked={userData.isOnline}\r\n      />\r\n      <Text style={styles.text}>\r\n        Lawmax <b>{userData.lawyerTier}</b>\r\n      </Text>\r\n      <Text style={styles.text}>\r\n        {userData.firm} {userData.city}\r\n      </Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default RenderLawyerDashboard;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderPastCalls\\ParticularCall.js",["334","335","336","337","338","339","340","341","342","343","344","345"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { View, Dimensions } from \"react-native\";\r\nimport { Drawer, Button, Spin } from \"antd\";\r\nimport firebase from \"../../firebase_config\";\r\nimport useActionDispatcher from \"../../Hooks/useActionDispatcher\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  SET_KEYS_TRUE,\r\n  UPDATE_USER_DATA,\r\n  SET_DASHBOARDKEYS_TRUE,\r\n} from \"../../Store/actions\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { Slider, Switch } from \"antd\";\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nexport default function ParticularCall() {\r\n  const userId = firebase.auth().currentUser.uid;\r\n\r\n  const userData = useSelector((state) => state.globalUserData);\r\n  const state = useSelector((state) => state.globalStateData);\r\n  const dispatchAction = useActionDispatcher();\r\n\r\n  const [lawyerVid, setLawyerVid] = useState(\"\");\r\n  const [clientVid, setClientVid] = useState(\"\");\r\n  const [ready, setReady] = useState({ lawyer: false, client: false });\r\n  const [messages, setMessages] = useState([]);\r\n  const [duration, setDuration] = useState(0);\r\n  const [totalDuration, setTotalDuration] = useState(0);\r\n\r\n  let lawyerVidRef = useRef(null);\r\n  let clientVidRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const getVids = async () => {\r\n      const vids = await firebase\r\n        .storage()\r\n        .ref()\r\n        .child(`${userId}/${userData.particularCall}`);\r\n      const lVid = await vids.child(\"lawyer\");\r\n      const cVid = await vids.child(\"client\");\r\n      await lVid.getDownloadURL().then((url) => {\r\n        setLawyerVid(url);\r\n      });\r\n      await cVid.getDownloadURL().then((url) => {\r\n        setClientVid(url);\r\n      });\r\n    };\r\n\r\n    const getMessages = async () => {\r\n      await firebase\r\n        .database()\r\n        .ref(\r\n          `/Accounts/${userId}/PastCalls/${userData.particularCall}/messages`\r\n        )\r\n        .once(\"value\", (snap) => {\r\n          if (snap.val()) {\r\n            var result = Object.keys(snap.val()).map((key) => [\r\n              key,\r\n              snap.val()[key],\r\n            ]);\r\n            setMessages(result);\r\n          }\r\n        });\r\n    };\r\n\r\n    getMessages();\r\n    getVids();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      if (lawyerVidRef && lawyerVidRef.getCurrentTime) {\r\n        if (totalDuration === \"\") {\r\n          setTotalDuration(lawyerVidRef.getDuration());\r\n        }\r\n        setDuration(lawyerVidRef.getCurrentTime());\r\n      }\r\n    }, 1000);\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        width: \"100%\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <View\r\n        style={{\r\n          width: width * 0.33,\r\n        }}\r\n      >\r\n        {messages.length ? (\r\n          messages.map((m) => {\r\n            let sender = m[0].split(\"_\").pop();\r\n            if (sender == \"client\") {\r\n              return (\r\n                <h6\r\n                  style={{\r\n                    padding: 7,\r\n                    paddingLeft: 15,\r\n                    backgroundColor: \"#eb596e\",\r\n                    borderRadius: 100,\r\n                    color: \"#fff\",\r\n                  }}\r\n                >\r\n                  {m[1]}\r\n                </h6>\r\n              );\r\n            } else {\r\n              return (\r\n                <h6\r\n                  style={{\r\n                    textAlign: \"end\",\r\n                    padding: 7,\r\n                    paddingRight: 15,\r\n                    backgroundColor: \"#6930c3\",\r\n                    borderRadius: 100,\r\n                    color: \"#fff\",\r\n                  }}\r\n                >\r\n                  {m[1]}\r\n                </h6>\r\n              );\r\n            }\r\n          })\r\n        ) : (\r\n          <h1>NO Message</h1>\r\n        )}\r\n      </View>\r\n      <View\r\n        style={{\r\n          width: width * 0.6,\r\n          marginTop: 20,\r\n          justifyContent: \"flex-end\",\r\n          alignItems: \"flex-end\",\r\n        }}\r\n      >\r\n        {lawyerVid.length > 0 ? (\r\n          <ReactPlayer\r\n            ref={(el) => (lawyerVidRef = el)}\r\n            width={600}\r\n            playing={ready.client && ready.lawyer}\r\n            onReady={() => setReady({ ...ready, lawyer: true })}\r\n            url={lawyerVid}\r\n          />\r\n        ) : (\r\n          <View\r\n            style={{\r\n              width: 600,\r\n              height: 360,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Spin />\r\n          </View>\r\n        )}\r\n\r\n        {clientVid.length > 0 ? (\r\n          <ReactPlayer\r\n            ref={(el) => (clientVidRef = el)}\r\n            width={600}\r\n            playing={ready.client && ready.lawyer}\r\n            onReady={() => setReady({ ...ready, client: true })}\r\n            url={clientVid}\r\n          />\r\n        ) : (\r\n          <View\r\n            style={{\r\n              width: 600,\r\n              height: 360,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Spin />\r\n          </View>\r\n        )}\r\n      </View>\r\n      <Slider\r\n        tipFormatter={null}\r\n        style={{ position: \"fixed\", bottom: 20, left: 20, width: \"95%\" }}\r\n        defaultValue={0}\r\n        value={(duration / totalDuration) * 100}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\n// messages.map((message) =>\r\n// Object.keys(message) === \"lawyer\" ? (\r\n//   <h1>{Object.values(message)}</h1>\r\n// ) : (\r\n//   <p>{Object.values(message)}</p>\r\n// )\r\n// ) : <h1>NO CHATS AVAILABLE</h1>\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\Firm\\FirmHistoryTable\\FirmLawyerRevenueTable.js",["346","347","348","349"],"import React from \"react\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nimport { Line, Pie, Radar } from \"@ant-design/charts\";\r\nimport { View } from \"react-native\";\r\n\r\n//RADAR DATA\r\nconst dataRadar = [\r\n  { name: \"G2\", star: 10178 },\r\n  { name: \"G6\", star: 7077 },\r\n  { name: \"F2\", star: 7345 },\r\n  { name: \"L7\", star: 2029 },\r\n  { name: \"X6\", star: 298 },\r\n  { name: \"AVA\", star: 806 },\r\n];\r\n\r\n//RADAR CONFIG\r\nconst configRadar = {\r\n  data: dataRadar.map((d) => ({ ...d, star: Math.log(d.star).toFixed(2) })),\r\n  xField: \"name\",\r\n  yField: \"star\",\r\n  meta: {\r\n    star: {\r\n      alias: \"Earning\",\r\n      min: 0,\r\n      nice: true,\r\n    },\r\n  },\r\n  xAxis: {\r\n    line: null,\r\n    tickLine: null,\r\n  },\r\n  yAxis: {\r\n    label: false,\r\n    grid: {\r\n      alternateColor: \"rgba(0, 0, 0, 0.04)\",\r\n    },\r\n  },\r\n  point: {},\r\n  area: {},\r\n};\r\n\r\n//PIE DATA\r\nvar dataPie = [\r\n  {\r\n    type: \"XL\",\r\n    value: 37,\r\n  },\r\n  {\r\n    type: \"X\",\r\n    value: 13,\r\n  },\r\n  {\r\n    type: \"L\",\r\n    value: 18,\r\n  },\r\n  {\r\n    type: \"Unknown Tier\",\r\n    value: 32,\r\n  },\r\n];\r\n\r\n//PIE CONFIG\r\nvar configPie = {\r\n  appendPadding: 10,\r\n  data: dataPie,\r\n  angleField: \"value\",\r\n  colorField: \"type\",\r\n  radius: 0.9,\r\n  label: {\r\n    type: \"inner\",\r\n    offset: \"-30%\",\r\n    content: function content(_ref) {\r\n      var percent = _ref.percent;\r\n      return parseFloat(\"\".concat(percent * 100, \"%\")).toFixed(2);\r\n    },\r\n    style: {\r\n      fontSize: 14,\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  interactions: [{ type: \"element-active\" }],\r\n};\r\n//GRAPH DATA\r\nconst data = [\r\n  { Date: \"20 Feb\", Earning: 3 },\r\n  { Date: \"21 Feb\", Earning: 4 },\r\n  { Date: \"22 Feb\", Earning: 3.5 },\r\n  { Date: \"23 Feb\", Earning: 5 },\r\n  { Date: \"24 Feb\", Earning: 4.9 },\r\n  { Date: \"25 Feb\", Earning: 6 },\r\n  { Date: \"26 Feb\", Earning: 7 },\r\n  { Date: \"27 Feb\", Earning: 9 },\r\n  { Date: \"28 Feb\", Earning: 13 },\r\n];\r\n//GRAPH CONFIG\r\nconst config = {\r\n  data,\r\n  width: 1000,\r\n  height: 400,\r\n  autoFit: false,\r\n  xField: \"Date\",\r\n  yField: \"Earning\",\r\n  point: {\r\n    size: 5,\r\n    shape: \"diamond\",\r\n  },\r\n  label: {\r\n    style: {\r\n      fill: \"#aaa\",\r\n    },\r\n  },\r\n};\r\nlet chart;\r\n//TABLE CONFIG\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    width: 330,\r\n    render: (text) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: \"Tier\",\r\n    dataIndex: \"tier\",\r\n    key: \"tier\",\r\n    width: 330,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    title: \"Earning\",\r\n    dataIndex: \"earning\",\r\n    key: \"earning\",\r\n    width: 330,\r\n    align: \"right\",\r\n    render: (text) => <h2 style={{ color: \"#16c79a\" }}>$ {text}</h2>,\r\n  },\r\n];\r\n//TABLE DATA\r\nconst dataTable = [\r\n  {\r\n    name: \"John Brown\",\r\n    tier: \"XL\",\r\n    earning: 6.4,\r\n  },\r\n  {\r\n    name: \"Jim Green\",\r\n    tier: \"L\",\r\n    earning: 3,\r\n  },\r\n  {\r\n    name: \"Joe Black\",\r\n    tier: \"X\",\r\n    earning: 5,\r\n  },\r\n];\r\n\r\nexport default function FirmLawyerRevenueTable() {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <Table columns={columns} dataSource={dataTable} />\r\n      <h3 style={{ marginBottom: 20, marginTop: 10 }}>\r\n        Daily Earning Analysis\r\n      </h3>\r\n      <Line {...config} onReady={(chartInstance) => (chart = chartInstance)} />\r\n      <View\r\n        style={{\r\n          width: \"100%\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          paddingVertical: 50,\r\n        }}\r\n      >\r\n        <Pie {...configPie} />\r\n        <Radar {...configRadar} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\ReactPaypal\\ReactPayPal.js",["350","351","352"],"import React, { useState } from \"react\";\r\nimport firebase from \"../../firebase_config\";\r\n\r\nexport default function ReactPayPal({ amount, height }) {\r\n  const [paid, setPaid] = React.useState(false);\r\n  const [error, setError] = React.useState(null);\r\n  const paypalRef = React.useRef();\r\n  const userId = firebase.auth().currentUser.uid;\r\n\r\n  // To show PayPal buttons once the component loads\r\n  React.useEffect(() => {\r\n    console.log(amount);\r\n    window.paypal\r\n      .Buttons({\r\n        createOrder: (data, actions) => {\r\n          return actions.order.create({\r\n            purchase_units: [\r\n              {\r\n                description: \"Your description\",\r\n                amount: {\r\n                  currency_code: \"USD\",\r\n                  value: amount,\r\n                },\r\n              },\r\n            ],\r\n          });\r\n        },\r\n        onApprove: async (data, actions) => {\r\n          const order = await actions.order.capture();\r\n          setPaid(true);\r\n          console.log(order);\r\n          firebase\r\n            .database()\r\n            .ref(`Accounts/${userId}/paypal`)\r\n            .update({\r\n              paypalCaptureId: order.purchase_units[0].payments.captures[0].id,\r\n              amount: Math.floor(order.purchase_units[0].amount.value),\r\n              currency: order.purchase_units[0].amount.currency_code,\r\n            });\r\n        },\r\n        onError: (err) => {\r\n          //   setError(err),\r\n          setError(\"err\");\r\n          console.error(err);\r\n        },\r\n      })\r\n      .render(paypalRef.current);\r\n  }, []);\r\n\r\n  // If the payment has been made\r\n  if (paid) {\r\n    return (\r\n      <div className=\"sPage\" style={{ height: height }}>\r\n        <div className=\"card\">\r\n          <div\r\n            style={{\r\n              borderRadius: 200,\r\n              height: 200,\r\n              width: 200,\r\n              background: \"#F8FAF5\",\r\n              margin: \"0 auto\",\r\n            }}\r\n          >\r\n            <i className=\"checkmark\">✓</i>\r\n          </div>\r\n          <h1>Success</h1>\r\n          <p>\r\n            We received your wallet recharge request,\r\n            <br /> We'll Update the amount in your wallet.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If any error occurs\r\n  if (error) {\r\n    return (\r\n      <div id=\"notfound\">\r\n        <div class=\"notfound\">\r\n          <div class=\"notfound-404\">\r\n            <h1>Oops!</h1>\r\n            <h2>Something went wrong </h2>\r\n          </div>\r\n          <h2>while processing your payment. We'll keep you updated.</h2>\r\n          <a onClick={() => window.location.reload()}>Go TO Homepage</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Default Render\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: window.innerWidth,\r\n        height: \"100%\",\r\n        minHeight: height,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div ref={paypalRef} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\utils\\LawyerSpecialtiesList.js",[],"C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderClientHome\\ClientAppointmentModal.js",["353"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Col, DatePicker, Input, Row, Space } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport moment from \"moment\";\r\nconst initialState = {\r\n  title: \"\",\r\n  description: \"\",\r\n  date: \"\",\r\n};\r\nconst ClientAppointmentModal = ({ isOpenModal, onClose, onSubmit }) => {\r\n  const [state, setState] = useState(initialState);\r\n  useEffect(() => {\r\n    setState(initialState);\r\n  }, [isOpenModal]);\r\n\r\n  const handleOk = () => {\r\n    onSubmit(state);\r\n  };\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n  const onDateChange = (date, str) => {\r\n    let d = moment(date).format(\"LL\");\r\n    setState((s) => ({\r\n      ...s,\r\n      date: d,\r\n    }));\r\n  };\r\n  const handleDataChange = (key) => (e) => {\r\n    let value = e.target.value;\r\n    setState((s) => ({\r\n      ...s,\r\n      [key]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={isOpenModal}\r\n      // onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      title=\"Schedule Appointment\"\r\n      footer={[\r\n        <Button key=\"Cancel\" onClick={handleCancel}>\r\n          Cancel\r\n        </Button>,\r\n        <Button\r\n          key=\"Submit\"\r\n          type=\"primary\"\r\n          onClick={handleOk}\r\n          disabled={!state.title.length || !state.date.length}\r\n        >\r\n          Submit\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <Row>\r\n        <Col span={24}>\r\n          <Input\r\n            placeholder=\"Title\"\r\n            onChange={handleDataChange(\"title\")}\r\n            value={state.title}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ paddingTop: 12 }}>\r\n        <Col span={24}>\r\n          <Input\r\n            placeholder=\"Description\"\r\n            onChange={handleDataChange(\"description\")}\r\n            value={state.description}\r\n            multiple\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ paddingTop: 12 }}>\r\n        <Col span={24}>\r\n          <Space direction=\"vertical\">\r\n            <DatePicker onChange={onDateChange} />\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ClientAppointmentModal;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerHome\\RenderLawyerTierSelection.js",["354","355","356","357","358","359","360","361","362","363","364"],"import React, { useState } from \"react\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport { Menu, Button, Card, Dropdown, Col, Row } from \"antd\";\r\nimport { lawyerYearsOfQualifications } from \"../utils/LawyerYearsOfQualificationOption\";\r\nimport { Text, View } from \"react-native\";\r\nimport useGlobalStyles from \"../../Hooks/useGlobalStyles\";\r\nimport { Select } from \"antd\";\r\nimport { Option } from \"antd/lib/mentions\";\r\nimport firebase from \"firebase\";\r\nimport useActionDispatcher from \"../../Hooks/useActionDispatcher\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  SET_KEYS_TRUE,\r\n  UPDATE_USER_DATA,\r\n  SET_DASHBOARDKEYS_TRUE,\r\n} from \"../../Store/actions\";\r\n\r\nconst RenderLawyerTierSelection = ({ state }) => {\r\n\r\n  const userData = useSelector((data) => data.globalUserData);\r\n  const dispatchAction = useActionDispatcher();\r\n  const [qualification, setQualification] = useState(\r\n    state?.lawyerTier ?? lawyerYearsOfQualifications[0]\r\n  );\r\n  const globalStyles = useGlobalStyles();\r\n  const handleMenuClick = (e) => {\r\n    setQualification(lawyerYearsOfQualifications[e.key]);\r\n  };\r\n  const handleSubmit = (value) => {\r\n    //update firebase and global state here\r\n    console.log(value)\r\n    dispatchAction(UPDATE_USER_DATA, {\r\n      data: {\r\n        lawyerTier: value,\r\n      },\r\n    });\r\n    firebase.database().ref(\"/Accounts/\" + state.username+\"/\").update({\r\n      tier:value\r\n  });\r\n  };\r\n  const menu = (\r\n    <Menu onClick={handleMenuClick}>\r\n      {lawyerYearsOfQualifications.map((e, i) => (\r\n        <Menu.Item key={i}>{e}</Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  );\r\n  return (\r\n    <View\r\n    style={{\r\n      flex: 1,\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    }}\r\n  >    <Card title=\"Lawyer Qualification\" style={{ width: 600, marginTop: 12 }}>\r\n    <Select\r\n      showSearch\r\n      style={{ width: \"70%\", marginLeft: \"15%\", height: 40, fontSize: 16 }}\r\n      placeholder=\"Years of qualification\"\r\n      optionFilterProp=\"children\"\r\n      defaultValue={userData.lawyerTier}\r\n      onChange={handleSubmit}\r\n      filterOption={(input, option) =>\r\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n    >\r\n      <Option value=\"X\">LawMax X (1-7 years)</Option>\r\n      <Option value=\"XL\">Lawmax XL (8-16)</Option>\r\n      <Option value=\"EXEC\">Lawmax EXEC (>16)</Option>\r\n    </Select>\r\n\r\n    </Card>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default RenderLawyerTierSelection;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\RenderLawyerHome\\RenderLawyerSpecialty.js",["365","366","367","368","369","370","371","372","373","374","375"],"import React, { useState } from \"react\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport { Menu, Button, Card, Dropdown, Col, Row } from \"antd\";\r\nimport { Select } from \"antd\";\r\nimport { Option } from \"antd/lib/mentions\";\r\nimport { Text, View } from \"react-native\";\r\nimport useGlobalStyles from \"../../Hooks/useGlobalStyles\";\r\nimport { lawyerSpecialties } from \"../utils/LawyerSpecialtiesList\";\r\nimport { TrophyFilled } from \"@ant-design/icons\";\r\nimport firebase from \"firebase\";\r\nimport useActionDispatcher from \"../../Hooks/useActionDispatcher\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  SET_KEYS_TRUE,\r\n  UPDATE_USER_DATA,\r\n  SET_DASHBOARDKEYS_TRUE,\r\n} from \"../../Store/actions\";\r\n\r\nconst RenderLawyerSpecialty = ({ state }) => {\r\n  const globalStyles = useGlobalStyles();\r\n\r\n  const userData = useSelector((data) => data.globalUserData);\r\n  const dispatchAction = useActionDispatcher();\r\n\r\n  const [specialty, setSpecialty] = useState(state?.lawyerSpecialties ?? []);\r\n  const handleMenuClick = (e) => {\r\n    if (!specialty.includes(lawyerSpecialties[e.key])) {\r\n      setSpecialty((s) => [...s, lawyerSpecialties[e.key]]);\r\n    }\r\n  };\r\n  const handleSubmit = (value) => {\r\n    //update firebase and global state here\r\n    console.log(value);\r\n    dispatchAction(UPDATE_USER_DATA, {\r\n      data: {\r\n        lawyerSpecialities: value,\r\n      },\r\n    });\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + state.username + \"/\")\r\n      .update({\r\n        specialities: value,\r\n      });\r\n  };\r\n  const menu = (\r\n    <Menu onClick={handleMenuClick}>\r\n      {lawyerSpecialties.map((e, i) => (\r\n        <Menu.Item key={i}>{e}</Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  );\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Card title=\"Lawyer Specialty\" style={{ width: 600, marginTop: 12 }}>\r\n        <Select\r\n          mode=\"multiple\"\r\n          defaultValue={userData.lawyerSpecialities}\r\n          onChange={handleSubmit}\r\n          style={{\r\n            width: \"70%\",\r\n            marginLeft: \"15%\",\r\n            minHeight: 40,\r\n            fontSize: 16,\r\n          }}\r\n          placeholder=\"Please select specialities\"\r\n        >\r\n          {lawyerSpecialties.map(function (item, key) {\r\n            return <Option key={item}>{item}</Option>;\r\n          })}\r\n        </Select>\r\n      </Card>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default RenderLawyerSpecialty;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\UserProfile\\UserProfile.js",["376","377","378","379","380"],"import { Avatar, Button, Col, Input, Row } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport useGlobalStyles from \"../../Hooks/useGlobalStyles\";\r\nimport firebase from \"firebase\";\r\nimport { IconButton, Button as MButton } from \"@material-ui/core\";\r\nimport useActionDispatcher from \"../../Hooks/useActionDispatcher\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  SET_KEYS_TRUE,\r\n  UPDATE_USER_DATA,\r\n  SET_DASHBOARDKEYS_TRUE,\r\n} from \"../../Store/actions\";\r\n\r\nconst UserProfile = ({ state }) => {\r\n  const styles = useGlobalStyles();\r\n\r\n  const userData = useSelector((data) => data.globalUserData);\r\n  const dispatchAction = useActionDispatcher();\r\n\r\n  const [user, setUser] = useState({\r\n    name: state?.displayName ?? \"\",\r\n    email: state?.email ?? \"\",\r\n    mobile: state?.mobile ?? \"\",\r\n    profilePic: state?.profilePic ?? \"\",\r\n    city: state?.city ?? \"\",\r\n    firm: state?.firm ?? \"\",\r\n    firmAddress: state?.firmAddress ?? \"\",\r\n    registrationNumber: state?.registrationNumber ?? \"\",\r\n  });\r\n\r\n  const uploadFile = (e) => {\r\n    console.log(e.target.files[0]);\r\n    let storageRef = firebase.storage().ref().child(state.username);\r\n\r\n    const task = storageRef.put(e.target.files[0]);\r\n    task.on(\r\n      \"state_changed\",\r\n      function progress(snapshot) {\r\n        console.log(\r\n          \"UPLOADING\",\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n      },\r\n      function error() {\r\n        console.log(\"FAILED TRY AGAIN!\");\r\n      },\r\n\r\n      function complete(event) {\r\n        console.log(\"UPLOAD COMPLETED\");\r\n\r\n        storageRef.getDownloadURL().then((url) => {\r\n          setUser((u) => ({\r\n            ...u,\r\n            profilePic: url,\r\n          }));\r\n          dispatchAction(UPDATE_USER_DATA, {\r\n            data: {\r\n              profilePic: url,\r\n            },\r\n          });\r\n          firebase\r\n            .database()\r\n            .ref(\"/Accounts/\" + state.username)\r\n            .update({\r\n              profilePic: url,\r\n            });\r\n        });\r\n      }\r\n    );\r\n  };\r\n  const handleDataChange = (key) => (e) => {\r\n    let value = e.target.value;\r\n    let validInput = key === \"mobile\" ? parseInt(value) : true;\r\n    if (validInput) {\r\n      setUser((u) => ({\r\n        ...u,\r\n        [key]: value,\r\n      }));\r\n    }\r\n  };\r\n  const handleSubmit = () => {\r\n    //update firebase and global state here\r\n    firebase\r\n      .database()\r\n      .ref(\"/Accounts/\" + state.username)\r\n      .update({\r\n        name: user.name,\r\n        email: user.email,\r\n        mobile: user.mobile,\r\n      });\r\n    if (state.isLawyer) {\r\n      firebase\r\n        .database()\r\n        .ref(\"/Accounts/\" + state.username)\r\n        .update({\r\n          city: user.city,\r\n          firm: user.firm,\r\n          firmAddress: user.firmAddress,\r\n          registrationNumber: user.registrationNumber,\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Avatar size={80} src={user.profilePic} alt=\"user\" shape=\"circle\" />\r\n      <Text\r\n        style={[\r\n          styles.title,\r\n          { paddingHorizontal: 12, textAlign: \"center\", marginTop: 8 },\r\n        ]}\r\n      >\r\n        {state.displayName}\r\n      </Text>\r\n      <input\r\n        type=\"file\"\r\n        id=\"contained-button-file\"\r\n        style={{ display: \"none\" }}\r\n        onChange={uploadFile}\r\n      ></input>\r\n\r\n      <label htmlFor=\"contained-button-file\">\r\n        <MButton color=\"secondary\" component=\"span\">\r\n          Upload Profile Picture\r\n        </MButton>\r\n      </label>\r\n\r\n      <Input\r\n        style={{ width: \"25%\" }}\r\n        placeholder=\"Name\"\r\n        value={user.name}\r\n        onChange={handleDataChange(\"name\")}\r\n      />\r\n\r\n      <Input\r\n        style={{ width: \"25%\" }}\r\n        placeholder=\"Email\"\r\n        value={user.email}\r\n        onChange={handleDataChange(\"email\")}\r\n      />\r\n\r\n      <Input\r\n        style={{ width: \"25%\" }}\r\n        type=\"number\"\r\n        placeholder=\"Mobile\"\r\n        value={user.mobile}\r\n        onChange={handleDataChange(\"mobile\")}\r\n      />\r\n\r\n      {state.isLawyer ? (\r\n        <div>\r\n          <Row\r\n            gutter={16}\r\n            style={{\r\n              paddingTop: 4,\r\n            }}\r\n          >\r\n            <Col span={24}>\r\n              <Input\r\n                placeholder=\"City\"\r\n                value={user.city}\r\n                onChange={handleDataChange(\"city\")}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row\r\n            gutter={16}\r\n            style={{\r\n              paddingTop: 4,\r\n            }}\r\n          >\r\n            <Col span={24}>\r\n              <Input\r\n                placeholder=\"firm\"\r\n                value={user.firm}\r\n                onChange={handleDataChange(\"firm\")}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row\r\n            gutter={16}\r\n            style={{\r\n              paddingTop: 4,\r\n            }}\r\n          >\r\n            <Col span={24}>\r\n              <Input\r\n                placeholder=\"firm address\"\r\n                value={user.firmAddress}\r\n                onChange={handleDataChange(\"firmAddress\")}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row\r\n            gutter={16}\r\n            style={{\r\n              paddingTop: 4,\r\n            }}\r\n          >\r\n            <Col span={24}>\r\n              <Input\r\n                placeholder=\"Registration Number\"\r\n                value={user.registrationNumber}\r\n                onChange={handleDataChange(\"registrationNumber\")}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ) : null}\r\n      <Row\r\n        gutter={16}\r\n        style={{\r\n          paddingTop: 4,\r\n        }}\r\n      >\r\n        <Col span={24}>\r\n          <MButton\r\n            style={{\r\n              fontWeight: 800,\r\n            }}\r\n            variant=\"outlined\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Update\r\n          </MButton>\r\n        </Col>\r\n      </Row>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","C:\\Users\\mohhi\\Desktop\\ZoomAlternate\\src\\Components\\utils\\LawyerYearsOfQualificationOption.js",[],{"ruleId":"381","replacedBy":"382"},{"ruleId":"383","replacedBy":"384"},{"ruleId":"385","severity":1,"message":"386","line":1,"column":17,"nodeType":"387","messageId":"388","endLine":1,"endColumn":26},{"ruleId":"385","severity":1,"message":"389","line":2,"column":8,"nodeType":"387","messageId":"388","endLine":2,"endColumn":16},{"ruleId":"385","severity":1,"message":"390","line":5,"column":10,"nodeType":"387","messageId":"388","endLine":5,"endColumn":23},{"ruleId":"385","severity":1,"message":"391","line":5,"column":25,"nodeType":"387","messageId":"388","endLine":5,"endColumn":41},{"ruleId":"385","severity":1,"message":"392","line":18,"column":9,"nodeType":"387","messageId":"388","endLine":18,"endColumn":17},{"ruleId":"385","severity":1,"message":"393","line":19,"column":9,"nodeType":"387","messageId":"388","endLine":19,"endColumn":23},{"ruleId":"385","severity":1,"message":"394","line":29,"column":10,"nodeType":"387","messageId":"388","endLine":29,"endColumn":17},{"ruleId":"385","severity":1,"message":"395","line":29,"column":19,"nodeType":"387","messageId":"388","endLine":29,"endColumn":29},{"ruleId":"385","severity":1,"message":"396","line":2,"column":22,"nodeType":"387","messageId":"388","endLine":2,"endColumn":26},{"ruleId":"385","severity":1,"message":"397","line":5,"column":3,"nodeType":"387","messageId":"388","endLine":5,"endColumn":9},{"ruleId":"385","severity":1,"message":"398","line":6,"column":3,"nodeType":"387","messageId":"388","endLine":6,"endColumn":9},{"ruleId":"385","severity":1,"message":"399","line":8,"column":3,"nodeType":"387","messageId":"388","endLine":8,"endColumn":16},{"ruleId":"385","severity":1,"message":"400","line":9,"column":3,"nodeType":"387","messageId":"388","endLine":9,"endColumn":14},{"ruleId":"385","severity":1,"message":"401","line":10,"column":3,"nodeType":"387","messageId":"388","endLine":10,"endColumn":16},{"ruleId":"385","severity":1,"message":"402","line":11,"column":3,"nodeType":"387","messageId":"388","endLine":11,"endColumn":12},{"ruleId":"385","severity":1,"message":"403","line":16,"column":8,"nodeType":"387","messageId":"388","endLine":16,"endColumn":12},{"ruleId":"385","severity":1,"message":"404","line":28,"column":8,"nodeType":"387","messageId":"388","endLine":28,"endColumn":18},{"ruleId":"385","severity":1,"message":"405","line":41,"column":7,"nodeType":"387","messageId":"388","endLine":41,"endColumn":17},{"ruleId":"385","severity":1,"message":"406","line":45,"column":9,"nodeType":"387","messageId":"388","endLine":45,"endColumn":14},{"ruleId":"385","severity":1,"message":"407","line":45,"column":16,"nodeType":"387","messageId":"388","endLine":45,"endColumn":22},{"ruleId":"385","severity":1,"message":"408","line":53,"column":15,"nodeType":"387","messageId":"388","endLine":53,"endColumn":19},{"ruleId":"409","severity":1,"message":"410","line":183,"column":6,"nodeType":"411","endLine":183,"endColumn":8,"suggestions":"412"},{"ruleId":"385","severity":1,"message":"413","line":185,"column":9,"nodeType":"387","messageId":"388","endLine":185,"endColumn":16},{"ruleId":"385","severity":1,"message":"414","line":189,"column":9,"nodeType":"387","messageId":"388","endLine":189,"endColumn":16},{"ruleId":"385","severity":1,"message":"396","line":2,"column":22,"nodeType":"387","messageId":"388","endLine":2,"endColumn":26},{"ruleId":"385","severity":1,"message":"403","line":8,"column":8,"nodeType":"387","messageId":"388","endLine":8,"endColumn":12},{"ruleId":"385","severity":1,"message":"391","line":11,"column":25,"nodeType":"387","messageId":"388","endLine":11,"endColumn":41},{"ruleId":"385","severity":1,"message":"405","line":23,"column":7,"nodeType":"387","messageId":"388","endLine":23,"endColumn":17},{"ruleId":"385","severity":1,"message":"406","line":27,"column":9,"nodeType":"387","messageId":"388","endLine":27,"endColumn":14},{"ruleId":"385","severity":1,"message":"407","line":27,"column":16,"nodeType":"387","messageId":"388","endLine":27,"endColumn":22},{"ruleId":"409","severity":1,"message":"410","line":99,"column":6,"nodeType":"411","endLine":99,"endColumn":8,"suggestions":"415"},{"ruleId":"385","severity":1,"message":"413","line":101,"column":9,"nodeType":"387","messageId":"388","endLine":101,"endColumn":16},{"ruleId":"385","severity":1,"message":"392","line":102,"column":9,"nodeType":"387","messageId":"388","endLine":102,"endColumn":17},{"ruleId":"385","severity":1,"message":"414","line":105,"column":9,"nodeType":"387","messageId":"388","endLine":105,"endColumn":16},{"ruleId":"385","severity":1,"message":"397","line":3,"column":10,"nodeType":"387","messageId":"388","endLine":3,"endColumn":16},{"ruleId":"385","severity":1,"message":"416","line":15,"column":9,"nodeType":"387","messageId":"388","endLine":15,"endColumn":14},{"ruleId":"385","severity":1,"message":"386","line":1,"column":17,"nodeType":"387","messageId":"388","endLine":1,"endColumn":26},{"ruleId":"385","severity":1,"message":"417","line":1,"column":28,"nodeType":"387","messageId":"388","endLine":1,"endColumn":36},{"ruleId":"385","severity":1,"message":"397","line":2,"column":29,"nodeType":"387","messageId":"388","endLine":2,"endColumn":35},{"ruleId":"385","severity":1,"message":"418","line":31,"column":9,"nodeType":"387","messageId":"388","endLine":31,"endColumn":21},{"ruleId":"385","severity":1,"message":"392","line":36,"column":9,"nodeType":"387","messageId":"388","endLine":36,"endColumn":17},{"ruleId":"385","severity":1,"message":"416","line":37,"column":9,"nodeType":"387","messageId":"388","endLine":37,"endColumn":14},{"ruleId":"385","severity":1,"message":"419","line":42,"column":11,"nodeType":"387","messageId":"388","endLine":42,"endColumn":22},{"ruleId":"385","severity":1,"message":"420","line":46,"column":15,"nodeType":"387","messageId":"388","endLine":46,"endColumn":20},{"ruleId":"385","severity":1,"message":"421","line":48,"column":15,"nodeType":"387","messageId":"388","endLine":48,"endColumn":20},{"ruleId":"385","severity":1,"message":"422","line":51,"column":15,"nodeType":"387","messageId":"388","endLine":51,"endColumn":20},{"ruleId":"385","severity":1,"message":"408","line":52,"column":15,"nodeType":"387","messageId":"388","endLine":52,"endColumn":19},{"ruleId":"385","severity":1,"message":"422","line":123,"column":15,"nodeType":"387","messageId":"388","endLine":123,"endColumn":20},{"ruleId":"385","severity":1,"message":"423","line":124,"column":15,"nodeType":"387","messageId":"388","endLine":124,"endColumn":25},{"ruleId":"385","severity":1,"message":"386","line":1,"column":17,"nodeType":"387","messageId":"388","endLine":1,"endColumn":26},{"ruleId":"385","severity":1,"message":"391","line":6,"column":25,"nodeType":"387","messageId":"388","endLine":6,"endColumn":41},{"ruleId":"385","severity":1,"message":"389","line":8,"column":9,"nodeType":"387","messageId":"388","endLine":8,"endColumn":17},{"ruleId":"385","severity":1,"message":"416","line":16,"column":9,"nodeType":"387","messageId":"388","endLine":16,"endColumn":14},{"ruleId":"385","severity":1,"message":"424","line":18,"column":18,"nodeType":"387","messageId":"388","endLine":18,"endColumn":27},{"ruleId":"385","severity":1,"message":"425","line":19,"column":16,"nodeType":"387","messageId":"388","endLine":19,"endColumn":23},{"ruleId":"385","severity":1,"message":"426","line":20,"column":16,"nodeType":"387","messageId":"388","endLine":20,"endColumn":23},{"ruleId":"385","severity":1,"message":"427","line":21,"column":23,"nodeType":"387","messageId":"388","endLine":21,"endColumn":37},{"ruleId":"385","severity":1,"message":"428","line":22,"column":30,"nodeType":"387","messageId":"388","endLine":22,"endColumn":51},{"ruleId":"385","severity":1,"message":"389","line":7,"column":9,"nodeType":"387","messageId":"388","endLine":7,"endColumn":17},{"ruleId":"385","severity":1,"message":"416","line":13,"column":9,"nodeType":"387","messageId":"388","endLine":13,"endColumn":14},{"ruleId":"385","severity":1,"message":"392","line":14,"column":9,"nodeType":"387","messageId":"388","endLine":14,"endColumn":17},{"ruleId":"385","severity":1,"message":"416","line":14,"column":9,"nodeType":"387","messageId":"388","endLine":14,"endColumn":14},{"ruleId":"385","severity":1,"message":"396","line":2,"column":10,"nodeType":"387","messageId":"388","endLine":2,"endColumn":14},{"ruleId":"385","severity":1,"message":"429","line":10,"column":3,"nodeType":"387","messageId":"388","endLine":10,"endColumn":25},{"ruleId":"385","severity":1,"message":"392","line":17,"column":9,"nodeType":"387","messageId":"388","endLine":17,"endColumn":17},{"ruleId":"409","severity":1,"message":"430","line":30,"column":6,"nodeType":"411","endLine":30,"endColumn":8,"suggestions":"431"},{"ruleId":"409","severity":1,"message":"430","line":28,"column":6,"nodeType":"411","endLine":28,"endColumn":8,"suggestions":"432"},{"ruleId":"433","severity":1,"message":"434","line":64,"column":86,"nodeType":"435","messageId":"436","endLine":64,"endColumn":88},{"ruleId":"385","severity":1,"message":"391","line":24,"column":3,"nodeType":"387","messageId":"388","endLine":24,"endColumn":19},{"ruleId":"385","severity":1,"message":"437","line":30,"column":9,"nodeType":"387","messageId":"388","endLine":30,"endColumn":15},{"ruleId":"409","severity":1,"message":"410","line":51,"column":6,"nodeType":"411","endLine":51,"endColumn":8,"suggestions":"438"},{"ruleId":"385","severity":1,"message":"416","line":13,"column":9,"nodeType":"387","messageId":"388","endLine":13,"endColumn":14},{"ruleId":"385","severity":1,"message":"439","line":5,"column":3,"nodeType":"387","messageId":"388","endLine":5,"endColumn":15},{"ruleId":"385","severity":1,"message":"440","line":13,"column":8,"nodeType":"387","messageId":"388","endLine":13,"endColumn":29},{"ruleId":"385","severity":1,"message":"391","line":20,"column":3,"nodeType":"387","messageId":"388","endLine":20,"endColumn":19},{"ruleId":"385","severity":1,"message":"437","line":28,"column":9,"nodeType":"387","messageId":"388","endLine":28,"endColumn":15},{"ruleId":"409","severity":1,"message":"410","line":42,"column":6,"nodeType":"411","endLine":42,"endColumn":8,"suggestions":"441"},{"ruleId":"385","severity":1,"message":"397","line":3,"column":10,"nodeType":"387","messageId":"388","endLine":3,"endColumn":16},{"ruleId":"409","severity":1,"message":"430","line":24,"column":6,"nodeType":"411","endLine":24,"endColumn":8,"suggestions":"442"},{"ruleId":"433","severity":1,"message":"434","line":39,"column":41,"nodeType":"435","messageId":"436","endLine":39,"endColumn":43},{"ruleId":"385","severity":1,"message":"443","line":1,"column":27,"nodeType":"387","messageId":"388","endLine":1,"endColumn":41},{"ruleId":"385","severity":1,"message":"444","line":2,"column":56,"nodeType":"387","messageId":"388","endLine":2,"endColumn":62},{"ruleId":"385","severity":1,"message":"445","line":6,"column":23,"nodeType":"387","messageId":"388","endLine":6,"endColumn":32},{"ruleId":"385","severity":1,"message":"446","line":7,"column":10,"nodeType":"387","messageId":"388","endLine":7,"endColumn":20},{"ruleId":"385","severity":1,"message":"447","line":26,"column":9,"nodeType":"387","messageId":"388","endLine":26,"endColumn":15},{"ruleId":"385","severity":1,"message":"448","line":27,"column":9,"nodeType":"387","messageId":"388","endLine":27,"endColumn":13},{"ruleId":"385","severity":1,"message":"449","line":47,"column":7,"nodeType":"387","messageId":"388","endLine":47,"endColumn":13},{"ruleId":"385","severity":1,"message":"450","line":386,"column":11,"nodeType":"387","messageId":"388","endLine":386,"endColumn":22},{"ruleId":"385","severity":1,"message":"451","line":436,"column":11,"nodeType":"387","messageId":"388","endLine":436,"endColumn":16},{"ruleId":"433","severity":1,"message":"434","line":775,"column":24,"nodeType":"435","messageId":"436","endLine":775,"endColumn":26},{"ruleId":"433","severity":1,"message":"434","line":867,"column":58,"nodeType":"435","messageId":"436","endLine":867,"endColumn":60},{"ruleId":"433","severity":1,"message":"434","line":870,"column":22,"nodeType":"435","messageId":"436","endLine":870,"endColumn":24},{"ruleId":"385","severity":1,"message":"452","line":1094,"column":9,"nodeType":"387","messageId":"388","endLine":1094,"endColumn":12},{"ruleId":"385","severity":1,"message":"452","line":1101,"column":9,"nodeType":"387","messageId":"388","endLine":1101,"endColumn":12},{"ruleId":"385","severity":1,"message":"452","line":1108,"column":9,"nodeType":"387","messageId":"388","endLine":1108,"endColumn":12},{"ruleId":"385","severity":1,"message":"452","line":1115,"column":9,"nodeType":"387","messageId":"388","endLine":1115,"endColumn":12},{"ruleId":"385","severity":1,"message":"453","line":1487,"column":11,"nodeType":"387","messageId":"388","endLine":1487,"endColumn":22},{"ruleId":"385","severity":1,"message":"454","line":1813,"column":7,"nodeType":"387","messageId":"388","endLine":1813,"endColumn":13},{"ruleId":"385","severity":1,"message":"392","line":18,"column":9,"nodeType":"387","messageId":"388","endLine":18,"endColumn":17},{"ruleId":"385","severity":1,"message":"416","line":19,"column":9,"nodeType":"387","messageId":"388","endLine":19,"endColumn":14},{"ruleId":"385","severity":1,"message":"422","line":85,"column":15,"nodeType":"387","messageId":"388","endLine":85,"endColumn":20},{"ruleId":"385","severity":1,"message":"423","line":86,"column":15,"nodeType":"387","messageId":"388","endLine":86,"endColumn":25},{"ruleId":"385","severity":1,"message":"455","line":8,"column":7,"nodeType":"387","messageId":"388","endLine":8,"endColumn":19},{"ruleId":"409","severity":1,"message":"430","line":30,"column":6,"nodeType":"411","endLine":30,"endColumn":8,"suggestions":"456"},{"ruleId":"433","severity":1,"message":"434","line":66,"column":42,"nodeType":"435","messageId":"436","endLine":66,"endColumn":44},{"ruleId":"385","severity":1,"message":"457","line":8,"column":10,"nodeType":"387","messageId":"388","endLine":8,"endColumn":21},{"ruleId":"385","severity":1,"message":"391","line":9,"column":25,"nodeType":"387","messageId":"388","endLine":9,"endColumn":41},{"ruleId":"458","severity":1,"message":"459","line":142,"column":27,"nodeType":"460","messageId":"436","endLine":142,"endColumn":29},{"ruleId":"385","severity":1,"message":"397","line":1,"column":10,"nodeType":"387","messageId":"388","endLine":1,"endColumn":16},{"ruleId":"385","severity":1,"message":"461","line":2,"column":17,"nodeType":"387","messageId":"388","endLine":2,"endColumn":28},{"ruleId":"385","severity":1,"message":"462","line":5,"column":8,"nodeType":"387","messageId":"388","endLine":5,"endColumn":30},{"ruleId":"385","severity":1,"message":"463","line":12,"column":10,"nodeType":"387","messageId":"388","endLine":12,"endColumn":21},{"ruleId":"409","severity":1,"message":"464","line":23,"column":5,"nodeType":"411","endLine":23,"endColumn":7,"suggestions":"465"},{"ruleId":"385","severity":1,"message":"466","line":25,"column":9,"nodeType":"387","messageId":"388","endLine":25,"endColumn":24},{"ruleId":"385","severity":1,"message":"467","line":8,"column":10,"nodeType":"387","messageId":"388","endLine":8,"endColumn":17},{"ruleId":"385","severity":1,"message":"468","line":13,"column":9,"nodeType":"387","messageId":"388","endLine":13,"endColumn":17},{"ruleId":"385","severity":1,"message":"469","line":15,"column":10,"nodeType":"387","messageId":"388","endLine":15,"endColumn":19},{"ruleId":"385","severity":1,"message":"470","line":15,"column":21,"nodeType":"387","messageId":"388","endLine":15,"endColumn":33},{"ruleId":"385","severity":1,"message":"471","line":19,"column":9,"nodeType":"387","messageId":"388","endLine":19,"endColumn":23},{"ruleId":"409","severity":1,"message":"472","line":124,"column":6,"nodeType":"411","endLine":124,"endColumn":8,"suggestions":"473"},{"ruleId":"409","severity":1,"message":"474","line":140,"column":6,"nodeType":"411","endLine":140,"endColumn":25,"suggestions":"475"},{"ruleId":"409","severity":1,"message":"476","line":163,"column":6,"nodeType":"411","endLine":163,"endColumn":19,"suggestions":"477"},{"ruleId":"385","severity":1,"message":"478","line":3,"column":10,"nodeType":"387","messageId":"388","endLine":3,"endColumn":16},{"ruleId":"385","severity":1,"message":"397","line":3,"column":18,"nodeType":"387","messageId":"388","endLine":3,"endColumn":24},{"ruleId":"385","severity":1,"message":"390","line":8,"column":3,"nodeType":"387","messageId":"388","endLine":8,"endColumn":16},{"ruleId":"385","severity":1,"message":"391","line":9,"column":3,"nodeType":"387","messageId":"388","endLine":9,"endColumn":19},{"ruleId":"385","severity":1,"message":"429","line":10,"column":3,"nodeType":"387","messageId":"388","endLine":10,"endColumn":25},{"ruleId":"385","severity":1,"message":"479","line":13,"column":18,"nodeType":"387","messageId":"388","endLine":13,"endColumn":24},{"ruleId":"385","severity":1,"message":"407","line":15,"column":16,"nodeType":"387","messageId":"388","endLine":15,"endColumn":22},{"ruleId":"385","severity":1,"message":"416","line":21,"column":9,"nodeType":"387","messageId":"388","endLine":21,"endColumn":14},{"ruleId":"385","severity":1,"message":"393","line":22,"column":9,"nodeType":"387","messageId":"388","endLine":22,"endColumn":23},{"ruleId":"409","severity":1,"message":"480","line":69,"column":6,"nodeType":"411","endLine":69,"endColumn":8,"suggestions":"481"},{"ruleId":"433","severity":1,"message":"482","line":101,"column":24,"nodeType":"435","messageId":"436","endLine":101,"endColumn":26},{"ruleId":"385","severity":1,"message":"483","line":167,"column":27,"nodeType":"387","messageId":"388","endLine":167,"endColumn":39},{"ruleId":"385","severity":1,"message":"484","line":2,"column":17,"nodeType":"387","messageId":"388","endLine":2,"endColumn":20},{"ruleId":"385","severity":1,"message":"485","line":2,"column":22,"nodeType":"387","messageId":"388","endLine":2,"endColumn":27},{"ruleId":"486","severity":1,"message":"487","line":121,"column":23,"nodeType":"488","endLine":121,"endColumn":26},{"ruleId":"385","severity":1,"message":"489","line":165,"column":54,"nodeType":"387","messageId":"388","endLine":165,"endColumn":59},{"ruleId":"385","severity":1,"message":"417","line":1,"column":17,"nodeType":"387","messageId":"388","endLine":1,"endColumn":25},{"ruleId":"409","severity":1,"message":"490","line":48,"column":6,"nodeType":"411","endLine":48,"endColumn":8,"suggestions":"491"},{"ruleId":"486","severity":1,"message":"487","line":86,"column":11,"nodeType":"488","endLine":86,"endColumn":55},{"ruleId":"385","severity":1,"message":"492","line":2,"column":18,"nodeType":"387","messageId":"388","endLine":2,"endColumn":22},{"ruleId":"385","severity":1,"message":"493","line":2,"column":10,"nodeType":"387","messageId":"388","endLine":2,"endColumn":22},{"ruleId":"385","severity":1,"message":"397","line":3,"column":16,"nodeType":"387","messageId":"388","endLine":3,"endColumn":22},{"ruleId":"385","severity":1,"message":"494","line":3,"column":30,"nodeType":"387","messageId":"388","endLine":3,"endColumn":38},{"ruleId":"385","severity":1,"message":"495","line":3,"column":40,"nodeType":"387","messageId":"388","endLine":3,"endColumn":43},{"ruleId":"385","severity":1,"message":"496","line":3,"column":45,"nodeType":"387","messageId":"388","endLine":3,"endColumn":48},{"ruleId":"385","severity":1,"message":"497","line":5,"column":10,"nodeType":"387","messageId":"388","endLine":5,"endColumn":14},{"ruleId":"385","severity":1,"message":"390","line":13,"column":3,"nodeType":"387","messageId":"388","endLine":13,"endColumn":16},{"ruleId":"385","severity":1,"message":"429","line":15,"column":3,"nodeType":"387","messageId":"388","endLine":15,"endColumn":25},{"ruleId":"385","severity":1,"message":"498","line":22,"column":10,"nodeType":"387","messageId":"388","endLine":22,"endColumn":23},{"ruleId":"385","severity":1,"message":"499","line":25,"column":9,"nodeType":"387","messageId":"388","endLine":25,"endColumn":21},{"ruleId":"385","severity":1,"message":"500","line":41,"column":9,"nodeType":"387","messageId":"388","endLine":41,"endColumn":13},{"ruleId":"385","severity":1,"message":"493","line":2,"column":10,"nodeType":"387","messageId":"388","endLine":2,"endColumn":22},{"ruleId":"385","severity":1,"message":"397","line":3,"column":16,"nodeType":"387","messageId":"388","endLine":3,"endColumn":22},{"ruleId":"385","severity":1,"message":"494","line":3,"column":30,"nodeType":"387","messageId":"388","endLine":3,"endColumn":38},{"ruleId":"385","severity":1,"message":"495","line":3,"column":40,"nodeType":"387","messageId":"388","endLine":3,"endColumn":43},{"ruleId":"385","severity":1,"message":"496","line":3,"column":45,"nodeType":"387","messageId":"388","endLine":3,"endColumn":48},{"ruleId":"385","severity":1,"message":"497","line":6,"column":10,"nodeType":"387","messageId":"388","endLine":6,"endColumn":14},{"ruleId":"385","severity":1,"message":"501","line":9,"column":10,"nodeType":"387","messageId":"388","endLine":9,"endColumn":22},{"ruleId":"385","severity":1,"message":"390","line":14,"column":3,"nodeType":"387","messageId":"388","endLine":14,"endColumn":16},{"ruleId":"385","severity":1,"message":"429","line":16,"column":3,"nodeType":"387","messageId":"388","endLine":16,"endColumn":25},{"ruleId":"385","severity":1,"message":"499","line":20,"column":9,"nodeType":"387","messageId":"388","endLine":20,"endColumn":21},{"ruleId":"385","severity":1,"message":"500","line":46,"column":9,"nodeType":"387","messageId":"388","endLine":46,"endColumn":13},{"ruleId":"385","severity":1,"message":"397","line":1,"column":18,"nodeType":"387","messageId":"388","endLine":1,"endColumn":24},{"ruleId":"385","severity":1,"message":"502","line":6,"column":10,"nodeType":"387","messageId":"388","endLine":6,"endColumn":20},{"ruleId":"385","severity":1,"message":"390","line":10,"column":3,"nodeType":"387","messageId":"388","endLine":10,"endColumn":16},{"ruleId":"385","severity":1,"message":"429","line":12,"column":3,"nodeType":"387","messageId":"388","endLine":12,"endColumn":25},{"ruleId":"385","severity":1,"message":"392","line":18,"column":9,"nodeType":"387","messageId":"388","endLine":18,"endColumn":17},"no-native-reassign",["503"],"no-negated-in-lhs",["504"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'SET_KEYS_TRUE' is defined but never used.","'UPDATE_USER_DATA' is defined but never used.","'userData' is assigned a value but never used.","'dispatchAction' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'View' is defined but never used.","'Button' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'TextField' is defined but never used.","'swal' is defined but never used.","'WalletPage' is defined but never used.","'Transition' is assigned a value but never used.","'width' is assigned a value but never used.","'height' is assigned a value but never used.","'snap' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatchAction'. Either include it or remove the dependency array.","ArrayExpression",["505"],"'classes' is assigned a value but never used.","'history' is assigned a value but never used.",["506"],"'state' is assigned a value but never used.","'useState' is defined but never used.","'handleGoBack' is assigned a value but never used.","'googleLogin' is assigned a value but never used.","'token' is assigned a value but never used.","'names' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'setMobile' is assigned a value but never used.","'setCity' is assigned a value but never used.","'setFirm' is assigned a value but never used.","'setFirmAddress' is assigned a value but never used.","'setRegistrationNumber' is assigned a value but never used.","'SET_DASHBOARDKEYS_TRUE' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["507"],["508"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Header' is assigned a value but never used.",["509"],"'HomeOutlined' is defined but never used.","'RenderClientDashboard' is defined but never used.",["510"],["511"],"'UploadOutlined' is defined but never used.","'Upload' is defined but never used.","'Swipeable' is defined but never used.","'GiftedChat' is defined but never used.","'Option' is assigned a value but never used.","'Step' is assigned a value but never used.","'yourId' is assigned a value but never used.","'totalLength' is assigned a value but never used.","'input' is assigned a value but never used.","'msg' is assigned a value but never used.","'videoMargin' is assigned a value but never used.","'styles' is assigned a value but never used.","'initialState' is assigned a value but never used.",["512"],"'useSelector' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'useCallback' is defined but never used.","'ClientAppointmentModal' is defined but never used.","'isOpenModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'state.username'. Either include it or remove the dependency array.",["513"],"'handleOpenModal' is assigned a value but never used.","'message' is defined but never used.","'picWidth' is assigned a value but never used.","'isChecked' is assigned a value but never used.","'setIsChecked' is assigned a value but never used.","'onSwitchChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userData.username'. Either include it or remove the dependency array.",["514"],"React Hook useEffect has missing dependencies: 'dispatchAction' and 'userData'. Either include them or remove the dependency array.",["515"],"React Hook useEffect has missing dependencies: 'acceptCall', 'rejectCall', 'userData.clientName', and 'userData.clientProfilePic'. Either include them or remove the dependency array.",["516"],"'Drawer' is defined but never used.","'Switch' is defined but never used.","React Hook useEffect has missing dependencies: 'userData.particularCall' and 'userId'. Either include them or remove the dependency array.",["517"],"Expected '===' and instead saw '=='.","'clientVidRef' is assigned a value but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'chart' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'amount' and 'userId'. Either include them or remove the dependency array.",["518"],"'Card' is defined but never used.","'DownOutlined' is defined but never used.","'Dropdown' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Text' is defined but never used.","'qualification' is assigned a value but never used.","'globalStyles' is assigned a value but never used.","'menu' is assigned a value but never used.","'TrophyFilled' is defined but never used.","'IconButton' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"519","fix":"520"},{"desc":"519","fix":"521"},{"desc":"522","fix":"523"},{"desc":"522","fix":"524"},{"desc":"519","fix":"525"},{"desc":"519","fix":"526"},{"desc":"522","fix":"527"},{"desc":"522","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},"Update the dependencies array to be: [dispatchAction]",{"range":"541","text":"542"},{"range":"543","text":"542"},"Update the dependencies array to be: [userId]",{"range":"544","text":"545"},{"range":"546","text":"545"},{"range":"547","text":"542"},{"range":"548","text":"542"},{"range":"549","text":"545"},{"range":"550","text":"545"},"Update the dependencies array to be: [state.username]",{"range":"551","text":"552"},"Update the dependencies array to be: [userData.username]",{"range":"553","text":"554"},"Update the dependencies array to be: [dispatchAction, userData, userData.username]",{"range":"555","text":"556"},"Update the dependencies array to be: [acceptCall, callRequest, rejectCall, userData.clientName, userData.clientProfilePic]",{"range":"557","text":"558"},"Update the dependencies array to be: [userData.particularCall, userId]",{"range":"559","text":"560"},"Update the dependencies array to be: [amount, userId]",{"range":"561","text":"562"},[7096,7098],"[dispatchAction]",[3414,3416],[1002,1004],"[userId]",[910,912],[1810,1812],[1408,1410],[750,752],[941,943],[799,801],"[state.username]",[4200,4202],"[userData.username]",[4702,4721],"[dispatchAction, userData, userData.username]",[5370,5383],"[acceptCall, callRequest, rejectCall, userData.clientName, userData.clientProfilePic]",[2212,2214],"[userData.particularCall, userId]",[1560,1562],"[amount, userId]"]